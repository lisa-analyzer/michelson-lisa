{ storage
    (pair (pair (bool %active)
                (pair (pair %baseState (int %chips_player1) (pair (int %chips_player2) (int %winner)))
                      (string %id)))
          (pair (pair (int %nextParty)
                      (pair %party1
                         (pair (address %address) (mutez %bond))
                         (pair (bool %hasBond) (pair (mutez %looserClaim) (key %pk)))))
                (pair (pair %party2
                         (pair (address %address) (mutez %bond))
                         (pair (bool %hasBond) (pair (mutez %looserClaim) (key %pk))))
                      (int %seq)))) ;
  parameter
    (or (or (pair %channelAccuseDoubleMove
               (pair (pair %msg1
                        (int %seq)
                        (pair %state (int %chips_player1) (pair (int %chips_player2) (int %winner))))
                     (pair %msg2
                        (int %seq)
                        (pair %state (int %chips_player1) (pair (int %chips_player2) (int %winner)))))
               (pair (int %party) (pair (signature %sig1) (signature %sig2))))
            (pair %channelNewState
               (pair %msg
                  (int %seq)
                  (pair %state (int %chips_player1) (pair (int %chips_player2) (int %winner))))
               (pair (signature %sig1) (signature %sig2))))
        (or (pair %channelRenounce (int %party) (signature %sig))
            (or (int %channelSetBond)
                (pair %play
                   (int %party)
                   (pair (signature %sig) (pair %sub (int %bet) (int %winning_party))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.active" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR ;
                   PUSH bool False ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DUP ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: params.msg1.seq == params.msg2.seq" ;
                          FAILWITH } } ;
                   DUP ;
                   CAR ;
                   CDR ;
                   PACK ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   PACK ;
                   COMPARE ;
                   NEQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.pack(params.msg1) != sp.pack(params.msg2)" ;
                          FAILWITH } } ;
                   DUP ;
                   CDR ;
                   CAR ;
                   PUSH int 1 ;
                   COMPARE ;
                   EQ ;
                   IF { { DUP ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR %seq %state ;
                          PUSH string "state" ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PAIR ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party1.pk, params.sig1, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg1.seq, state = params.msg1.state)))" ;
                                 FAILWITH } } ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR %seq %state ;
                          PUSH string "state" ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PAIR ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party1.pk, params.sig2, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg2.seq, state = params.msg2.state)))" ;
                                 FAILWITH } } ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          ADD ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS } }
                      { { DUP ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR %seq %state ;
                          PUSH string "state" ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PAIR ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party2.pk, params.sig1, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg1.seq, state = params.msg1.state)))" ;
                                 FAILWITH } } ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR %seq %state ;
                          PUSH string "state" ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PAIR ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party2.pk, params.sig2, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg2.seq, state = params.msg2.state)))" ;
                                 FAILWITH } } ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          ADD ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS } } ;
                   SWAP ;
                   DROP } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.active" ; FAILWITH } } ;
                   DUP ;
                   CAR ;
                   CAR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   CDR ;
                   CDR ;
                   COMPARE ;
                   LT ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.seq < params.msg.seq" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CAR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DUP ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   PAIR %seq %state ;
                   PUSH string "state" ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   PAIR %id %name ;
                   PAIR ;
                   PACK ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CAR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CDR ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   CHECK_SIGNATURE ;
                   IF { {} }
                      { { PUSH string
                               "WrongCondition: sp.check_signature(self.data.party1.pk, params.sig1, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg.seq, state = params.msg.state)))" ;
                          FAILWITH } } ;
                   DUP ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   PAIR %seq %state ;
                   PUSH string "state" ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   PAIR %id %name ;
                   PAIR ;
                   PACK ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   CHECK_SIGNATURE ;
                   IF { {} }
                      { { PUSH string
                               "WrongCondition: sp.check_signature(self.data.party2.pk, params.sig2, sp.pack(sp.record(id = self.data.id, name = 'state', seq = params.msg.seq, state = params.msg.state)))" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CDR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 ;
                   NIL operation } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.active" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR ;
                   PUSH bool False ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DUP ;
                   CAR ;
                   PUSH int 1 ;
                   COMPARE ;
                   EQ ;
                   IF { { PUSH string "renounce" ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party1.pk, params.sig, sp.pack(sp.record(id = self.data.id, name = 'renounce')))" ;
                                 FAILWITH } } ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SUB ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          ADD ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          DUP ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          SWAP ;
                          DROP } }
                      { { PUSH string "renounce" ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR %id %name ;
                          PACK ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CHECK_SIGNATURE ;
                          IF { {} }
                             { { PUSH string
                                      "WrongCondition: sp.check_signature(self.data.party2.pk, params.sig, sp.pack(sp.record(id = self.data.id, name = 'renounce')))" ;
                                 FAILWITH } } ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SUB ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          ADD ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          DUP ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PUSH unit Unit ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          SWAP ;
                          DROP } } ;
                   SWAP ;
                   DROP } }
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       IF { {} }
                          { { PUSH string "WrongCondition: self.data.active" ; FAILWITH } } ;
                       DUP ;
                       PUSH int 1 ;
                       COMPARE ;
                       EQ ;
                       IF { { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              IF { { PUSH string "WrongCondition: ~ self.data.party1.hasBond" ; FAILWITH } }
                                 { {} } ;
                              AMOUNT ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              COMPARE ;
                              EQ ;
                              IF { {} }
                                 { { PUSH string "WrongCondition: self.data.party1.bond == sp.amount" ;
                                     FAILWITH } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              CDR ;
                              PUSH bool True ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP } }
                          { { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              IF { { PUSH string "WrongCondition: ~ self.data.party2.hasBond" ; FAILWITH } }
                                 { {} } ;
                              AMOUNT ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              COMPARE ;
                              EQ ;
                              IF { {} }
                                 { { PUSH string "WrongCondition: self.data.party2.bond == sp.amount" ;
                                     FAILWITH } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              CDR ;
                              PUSH bool True ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP } } ;
                       DROP ;
                       NIL operation } }
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       IF { {} }
                          { { PUSH string "WrongCondition: self.data.active" ; FAILWITH } } ;
                       DUP ;
                       CAR ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: self.data.nextParty == params.party" ;
                              FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR ;
                       PUSH int 1 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       PUSH int 0 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: self.data.baseState.winner == 0" ; FAILWITH } } ;
                       DUP ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH int 1 ;
                       SWAP ;
                       COMPARE ;
                       GE ;
                       IF { {} }
                          { { PUSH string "WrongCondition: params.sub.winning_party >= 1" ; FAILWITH } } ;
                       DUP ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH int 2 ;
                       SWAP ;
                       COMPARE ;
                       LE ;
                       IF { {} }
                          { { PUSH string "WrongCondition: params.sub.winning_party <= 2" ; FAILWITH } } ;
                       DUP ;
                       CDR ;
                       CDR ;
                       CAR ;
                       PUSH int 0 ;
                       COMPARE ;
                       LT ;
                       IF { {} }
                          { { PUSH string "WrongCondition: params.sub.bet > 0" ; FAILWITH } } ;
                       DUP ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH int 1 ;
                       COMPARE ;
                       EQ ;
                       IF { { DUP ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              GE ;
                              IF { {} }
                                 { { PUSH string "WrongCondition: self.data.baseState.chips_player2 >= params.sub.bet" ;
                                     FAILWITH } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              ADD ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SUB ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP ;
                              PUSH int 2000 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     CAR ;
                                     PUSH int 1 ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 ;
                                     SWAP ;
                                     DROP ;
                                     PUSH int 0 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { PUSH int 1 ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            COMPARE ;
                                            EQ ;
                                            IF { { SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   CDR ;
                                                   PUSH bool False ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUG 2 ;
                                                   SWAP ;
                                                   DROP ;
                                                   NIL operation ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   SUB ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   ADD ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   DUP ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   SWAP ;
                                                   DROP } }
                                               { { SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   CDR ;
                                                   PUSH bool False ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUG 2 ;
                                                   SWAP ;
                                                   DROP ;
                                                   NIL operation ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   SUB ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   ADD ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   DUP ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   SWAP ;
                                                   DROP } } } }
                                        { NIL operation } } }
                                 { NIL operation } } }
                          { { DUP ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              COMPARE ;
                              GE ;
                              IF { {} }
                                 { { PUSH string "WrongCondition: self.data.baseState.chips_player1 >= params.sub.bet" ;
                                     FAILWITH } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              ADD ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              SUB ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 ;
                              SWAP ;
                              DROP ;
                              PUSH int 2000 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     CAR ;
                                     PUSH int 2 ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 ;
                                     SWAP ;
                                     DROP ;
                                     PUSH int 0 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     CDR ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { PUSH int 1 ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            COMPARE ;
                                            EQ ;
                                            IF { { SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   CDR ;
                                                   PUSH bool False ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUG 2 ;
                                                   SWAP ;
                                                   DROP ;
                                                   NIL operation ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   SUB ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   ADD ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   DUP ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   SWAP ;
                                                   DROP } }
                                               { { SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   CDR ;
                                                   PUSH bool False ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUG 2 ;
                                                   SWAP ;
                                                   DROP ;
                                                   NIL operation ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   SUB ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   ADD ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   DUP ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   CONTRACT unit ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   CDR ;
                                                   CAR ;
                                                   PUSH unit Unit ;
                                                   TRANSFER_TOKENS ;
                                                   CONS ;
                                                   SWAP ;
                                                   DROP } } } }
                                        { NIL operation } } }
                                 { NIL operation } } } ;
                       PUSH int 1 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       COMPARE ;
                       EQ ;
                       IF { { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PAIR %seq %state ;
                              PUSH string "state" ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              PAIR %id %name ;
                              PAIR ;
                              PACK ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CHECK_SIGNATURE ;
                              IF { {} }
                                 { { PUSH string
                                          "WrongCondition: sp.check_signature(self.data.party1.pk, params.sig, sp.pack(sp.record(id = self.data.id, name = 'state', seq = self.data.seq, state = self.data.baseState)))" ;
                                     FAILWITH } } } }
                          { { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PAIR %seq %state ;
                              PUSH string "state" ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              PAIR %id %name ;
                              PAIR ;
                              PACK ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CHECK_SIGNATURE ;
                              IF { {} }
                                 { { PUSH string
                                          "WrongCondition: sp.check_signature(self.data.party2.pk, params.sig, sp.pack(sp.record(id = self.data.id, name = 'state', seq = self.data.seq, state = self.data.baseState)))" ;
                                     FAILWITH } } } } ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PUSH int 3 ;
                       SUB ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 3 ;
                       DIG 2 ;
                       DROP ;
                       SWAP ;
                       DROP } } } } ;
         PAIR } }
