{ parameter unit ;
  storage
    (pair (pair (pair (address %admin) (pair (int %amount_A) (int %amount_B)))
                (pair (timestamp %creationTime)
                      (pair (address %eventSinkContractAddress) (bool %exchanged))))
          (pair (pair (timestamp %expiryTime)
                      (pair (map %partiesDetails
                               string
                               (pair (int %amount) (pair (address %publicAddress) (address %tokenAddress))))
                            (address %publicAddress_A)))
                (pair (address %publicAddress_B)
                      (pair (address %tokenAddress_A) (address %tokenAddress_B))))) ;
  code { { DUP ;
           CDR ;
           SWAP ;
           CAR ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CAR ;
           CAR ;
           SENDER ;
           COMPARE ;
           EQ ;
           IF { {} } { { PUSH string "01" ; FAILWITH } } ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CDR ;
           CDR ;
           CDR ;
           IF { { PUSH string "Escrow already exchanged" ; FAILWITH } } { {} } ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CDR ;
           CAR ;
           CAR ;
           NOW ;
           COMPARE ;
           LE ;
           IF { {} } { { PUSH string "Escrow already expired" ; FAILWITH } } ;
           NIL operation ;
           DIG 2 ;
           DUP ;
           DUG 3 ;
           CDR ;
           CDR ;
           CDR ;
           CAR ;
           CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
           PUSH mutez 0 ;
           DIG 4 ;
           DUP ;
           DUG 5 ;
           CDR ;
           CDR ;
           CAR ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CDR ;
           CAR ;
           CDR ;
           CDR ;
           PAIR %f %t ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CAR ;
           CAR ;
           CDR ;
           CAR ;
           PAIR %amount ;
           TRANSFER_TOKENS ;
           CONS ;
           DIG 2 ;
           DUP ;
           DUG 3 ;
           CDR ;
           CDR ;
           CDR ;
           CDR ;
           CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
           PUSH mutez 0 ;
           DIG 4 ;
           DUP ;
           DUG 5 ;
           CDR ;
           CDR ;
           CAR ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CDR ;
           CDR ;
           CAR ;
           PAIR %f %t ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CAR ;
           CAR ;
           CDR ;
           CDR ;
           PAIR %amount ;
           TRANSFER_TOKENS ;
           CONS ;
           DIG 2 ;
           DUP ;
           CDR ;
           SWAP ;
           CAR ;
           DUP ;
           CAR ;
           SWAP ;
           CDR ;
           DUP ;
           CAR ;
           SWAP ;
           CDR ;
           CAR ;
           PUSH bool True ;
           SWAP ;
           PAIR ;
           SWAP ;
           PAIR ;
           SWAP ;
           PAIR ;
           PAIR ;
           DUG 2 ;
           DUP ;
           DIG 3 ;
           DUP ;
           DUG 4 ;
           CAR ;
           CDR ;
           CDR ;
           CAR ;
           CONTRACT %exchangeEvent
             (pair (pair (address %DVPaddress) (int %amount_A))
                   (pair (int %amount_B) (pair (address %party_A) (address %party_B)))) ;
           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
           PUSH mutez 0 ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CDR ;
           CDR ;
           CAR ;
           DIG 6 ;
           DUP ;
           DUG 7 ;
           CDR ;
           CAR ;
           CDR ;
           CDR ;
           PAIR %party_A %party_B ;
           DIG 6 ;
           DUP ;
           DUG 7 ;
           CAR ;
           CAR ;
           CDR ;
           CDR ;
           PAIR %amount_B ;
           DIG 6 ;
           DUP ;
           DUG 7 ;
           CAR ;
           CAR ;
           CDR ;
           CAR ;
           SELF ;
           DIG 6 ;
           DROP ;
           DIG 6 ;
           DROP ;
           ADDRESS ;
           PAIR %DVPaddress %amount_A ;
           PAIR ;
           TRANSFER_TOKENS ;
           CONS ;
           PAIR } } }
