{ parameter
    (or (or (or (unit %clear_expired)
                (pair %create_sig (pair (int %d) (string %i)) (list %s address)))
            (or (pair %failed (pair (int %d) (list %l (pair address int))) (string %spid))
                (pair %sign (string %spid) (int %v))))
        (pair %unanimity (pair (int %d) (list %l (pair address int))) (string %spid))) ;
  storage
    (pair (pair (address %admin) (map %sig_assets (pair string address) int))
          (map %sig_spec_assets
             string
             (pair (pair (int %dev) (timestamp %expiration))
                   (pair (list %signatories address) (set %signatures (pair string address)))))) ;
  code { LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int nat)) (pair int nat))
           bool
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             INT ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             MUL ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             INT ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             MUL ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     COMPARE ;
                     GE ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     COMPARE ;
                     GT ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     COMPARE ;
                     LE ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     COMPARE ;
                     LT ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP 5 } } ;
         LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int nat)) (pair int nat))
           (pair int nat)
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     ABS ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     PUSH int 0 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF { DIG 3 ; DUP ; DUG 4 ; CDR ; INT }
                        { DIG 3 ; DUP ; DUG 4 ; CDR ; INT ; NEG } ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     INT ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     INT ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     SUB ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     INT ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     INT ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     ADD ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DUP ;
             DIP { DROP 4 } } ;
         LAMBDA
           (pair (pair (pair address (map (pair string address) int))
                       (map string (pair (pair int timestamp) (pair (list address) (set (pair string address))))))
                 (pair string address))
           (pair (pair string address) int)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (pair address (map (pair string address) int))
                       (map string (pair (pair int timestamp) (pair (list address) (set (pair string address))))))
                 string)
           nat
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CDR ;
             SIZE ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair (pair (pair address (map (pair string address) int))
                       (map string (pair (pair int timestamp) (pair (list address) (set (pair string address))))))
                 string)
           (pair (pair (pair int timestamp) (pair string (list address))) (set (pair string address)))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     NIL string ;
                     NIL string ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            DIG 8 ;
                            DUP ;
                            DUG 9 ;
                            PAIR ;
                            DIG 9 ;
                            DUP ;
                            DUG 10 ;
                            SWAP ;
                            EXEC ;
                            NOW ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            COMPARE ;
                            LT ;
                            IF { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CONS }
                               { DIG 1 ; DUP ; DUG 2 } ;
                            DIP { DROP 3 } } ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CONS ;
                            DIP { DROP } } ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DUP ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            NONE (pair (pair int timestamp) (pair (list address) (set (pair string address)))) ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            CAR ;
                            PAIR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            SWAP ;
                            CDR ;
                            SWAP ;
                            PAIR ;
                            CAR ;
                            DIP { DROP 3 } } ;
                     DUP ;
                     DIP { DROP 2 } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 3 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     EMPTY_SET (pair string address) ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PUSH int 86400 ;
                     NOW ;
                     ADD ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     MEM ;
                     IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 6 } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 6 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { SELF ;
                     ADDRESS ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     SENDER ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     PUSH bool False ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            COMPARE ;
                            EQ ;
                            OR ;
                            DIP { DROP } } ;
                     NOT ;
                     DIP { DROP } ;
                     IF { PUSH string "require r0 failed" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR ;
                     DIG 11 ;
                     DUP ;
                     DUG 12 ;
                     SWAP ;
                     EXEC ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SIZE ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     PAIR ;
                     DIG 15 ;
                     DUP ;
                     DUG 16 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          NIL (pair address int) ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          DIG 16 ;
                          DUP ;
                          DUG 17 ;
                          SWAP ;
                          EXEC ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 PAIR ;
                                 DIG 21 ;
                                 DUP ;
                                 DUG 22 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 PAIR ;
                                 DIG 22 ;
                                 DUP ;
                                 DUG 23 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CDR ;
                                 PAIR ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 CAR ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CONS ;
                                 DIP { DROP ; CDR } ;
                                 PAIR ;
                                 CAR ;
                                 DIP { DROP 4 } } ;
                          DUP ;
                          DIP { DROP 5 } ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          CAR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          PAIR ;
                          DIG 14 ;
                          DUP ;
                          DUG 15 ;
                          SWAP ;
                          EXEC ;
                          DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 9 ;
                          DUP ;
                          DUG 10 ;
                          CAR ;
                          DIG 9 ;
                          DUP ;
                          DUG 10 ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          PUSH nat 1 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          PAIR ;
                          DIG 21 ;
                          DUP ;
                          DUG 22 ;
                          SWAP ;
                          EXEC ;
                          INT ;
                          PAIR ;
                          PUSH nat 1 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          GET ;
                          IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                          PUSH int 0 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 PAIR ;
                                 DIG 27 ;
                                 DUP ;
                                 DUG 28 ;
                                 SWAP ;
                                 EXEC ;
                                 DUP ;
                                 CDR ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 ADD ;
                                 DIP { DROP 2 } } ;
                          DIP { DROP 3 } ;
                          PAIR ;
                          UNIT ;
                          LEFT unit ;
                          LEFT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 22 ;
                          DUP ;
                          DUG 23 ;
                          SWAP ;
                          EXEC ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          PAIR ;
                          DIG 20 ;
                          DUP ;
                          DUG 21 ;
                          SWAP ;
                          EXEC ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          PUSH nat 1 ;
                          PUSH nat 200 ;
                          INT ;
                          PAIR ;
                          PUSH nat 1 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UNIT ;
                          LEFT unit ;
                          LEFT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 25 ;
                          DUP ;
                          DUG 26 ;
                          SWAP ;
                          EXEC ;
                          PUSH nat 1 ;
                          PUSH nat 1 ;
                          INT ;
                          PAIR ;
                          UNIT ;
                          RIGHT unit ;
                          LEFT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 25 ;
                          DUP ;
                          DUG 26 ;
                          SWAP ;
                          EXEC ;
                          UNIT ;
                          LEFT unit ;
                          RIGHT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 24 ;
                          DUP ;
                          DUG 25 ;
                          SWAP ;
                          EXEC ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          PAIR ;
                          DIG 22 ;
                          DUP ;
                          DUG 23 ;
                          SWAP ;
                          EXEC ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          PUSH nat 1 ;
                          PUSH nat 200 ;
                          INT ;
                          PAIR ;
                          PUSH nat 1 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UNIT ;
                          LEFT unit ;
                          LEFT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 27 ;
                          DUP ;
                          DUG 28 ;
                          SWAP ;
                          EXEC ;
                          PUSH nat 1 ;
                          PUSH nat 1 ;
                          INT ;
                          PAIR ;
                          UNIT ;
                          RIGHT unit ;
                          RIGHT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 27 ;
                          DUP ;
                          DUG 28 ;
                          SWAP ;
                          EXEC ;
                          UNIT ;
                          LEFT unit ;
                          RIGHT (or unit unit) ;
                          PAIR ;
                          PAIR ;
                          DIG 26 ;
                          DUP ;
                          DUG 27 ;
                          SWAP ;
                          EXEC ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          PAIR ;
                          DIG 24 ;
                          DUP ;
                          DUG 25 ;
                          SWAP ;
                          EXEC ;
                          PUSH bool True ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 DIG 10 ;
                                 DUP ;
                                 DUG 11 ;
                                 PAIR ;
                                 DIG 29 ;
                                 DUP ;
                                 DUG 30 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 11 ;
                                 DUP ;
                                 DUG 12 ;
                                 PAIR ;
                                 DIG 30 ;
                                 DUP ;
                                 DUG 31 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 PUSH nat 1 ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CDR ;
                                 PAIR ;
                                 UNIT ;
                                 LEFT unit ;
                                 RIGHT (or unit unit) ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 33 ;
                                 DUP ;
                                 DUG 34 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH nat 1 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 PAIR ;
                                 DIG 9 ;
                                 DUP ;
                                 DUG 10 ;
                                 UNIT ;
                                 LEFT unit ;
                                 RIGHT (or unit unit) ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 34 ;
                                 DUP ;
                                 DUG 35 ;
                                 SWAP ;
                                 EXEC ;
                                 AND ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 CAR ;
                                 AND ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 CDR ;
                                 SWAP ;
                                 PAIR ;
                                 CAR ;
                                 DIP { DROP 5 } } ;
                          DUP ;
                          DIP { DROP 10 } ;
                          IF { DIG 7 ;
                               DUP ;
                               DUG 8 ;
                               SELF ;
                               ADDRESS ;
                               CONTRACT %unanimity (pair (pair (int %d) (list %l (pair address int))) (string %spid)) ;
                               IF_NONE { PUSH string "error self" ; FAILWITH } { DUP ; DIP { DROP } } ;
                               PUSH mutez 0 ;
                               DIG 12 ;
                               DUP ;
                               DUG 13 ;
                               CAR ;
                               DIG 6 ;
                               DUP ;
                               DUG 7 ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               PAIR ;
                               PAIR ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               DIG 8 ;
                               DUP ;
                               DUG 9 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIP { DROP 2 } }
                             { DIG 7 ;
                               DUP ;
                               DUG 8 ;
                               SELF ;
                               ADDRESS ;
                               CONTRACT %failed (pair (pair (int %d) (list %l (pair address int))) (string %spid)) ;
                               IF_NONE { PUSH string "error self" ; FAILWITH } { DUP ; DIP { DROP } } ;
                               PUSH mutez 0 ;
                               DIG 12 ;
                               DUP ;
                               DUG 13 ;
                               CAR ;
                               DIG 6 ;
                               DUP ;
                               DUG 7 ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               PAIR ;
                               PAIR ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               DIG 8 ;
                               DUP ;
                               DUG 9 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIP { DROP 2 } } ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          CAR ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 NONE int ;
                                 SWAP ;
                                 UPDATE ;
                                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 DUP ;
                                 DIP { DROP 2 } ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 CDR ;
                                 SWAP ;
                                 PAIR ;
                                 CAR ;
                                 DIP { DROP 2 } } ;
                          DUP ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          NONE (pair (pair int timestamp) (pair (list address) (set (pair string address)))) ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DIP { DROP 6 } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DIP { DROP 5 } }
                        { DUP } ;
                     DUP ;
                     DIP { DROP 10 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { SELF ;
             ADDRESS ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             NIL operation ;
             PAIR ;
             DIP { DROP 2 } } ;
         DIP { DROP 7 } } }
