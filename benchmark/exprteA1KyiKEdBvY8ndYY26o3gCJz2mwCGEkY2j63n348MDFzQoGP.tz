{ parameter
    (or (or (lambda %admin_update
               (pair (pair (pair (pair (big_map %commitments bytes timestamp) (nat %default_ttl))
                                 (pair (nat %max_commitment_age) (nat %min_bid_per_day)))
                           (pair (pair (nat %min_commitment_age) (address %name_registry))
                                 (pair (address %owner)
                                       (big_map %records bytes (pair (timestamp %expiration_date) (nat %price_per_day))))))
                     (bytes %tld))
               (pair (list operation)
                     (pair (pair (pair (pair (big_map %commitments bytes timestamp) (nat %default_ttl))
                                       (pair (nat %max_commitment_age) (nat %min_bid_per_day)))
                                 (pair (pair (nat %min_commitment_age) (address %name_registry))
                                       (pair (address %owner)
                                             (big_map %records bytes (pair (timestamp %expiration_date) (nat %price_per_day))))))
                           (bytes %tld))))
            (pair %buy (pair (nat %duration) (bytes %label)) (address %owner)))
        (or (bytes %commit) (pair %renew (nat %duration) (bytes %label)))) ;
  storage
    (pair (pair (pair (pair (big_map %commitments bytes timestamp) (nat %default_ttl))
                      (pair (nat %max_commitment_age) (nat %min_bid_per_day)))
                (pair (pair (nat %min_commitment_age) (address %name_registry))
                      (pair (address %owner)
                            (big_map %records bytes (pair (timestamp %expiration_date) (nat %price_per_day))))))
          (bytes %tld)) ;
  code { LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair (pair (big_map bytes timestamp) nat) (pair nat nat))
                             (pair (pair nat address) (pair address (big_map bytes (pair timestamp nat)))))
                       bytes))
           (list operation)
           { PUSH mutez 1 ;
             PUSH nat 1000000 ;
             PUSH nat 500000 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             MUL ;
             ADD ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             MUL ;
             DUP ;
             AMOUNT ;
             COMPARE ;
             LT ;
             IF { PUSH string "AMOUNT_TOO_LOW" ; FAILWITH } { DUP ; AMOUNT ; SUB } ;
             PUSH mutez 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { NIL operation ;
                  SENDER ;
                  DUP ;
                  CONTRACT unit ;
                  IF_NONE
                    { PUSH string "INVALID_REFUNDEE" ; FAILWITH }
                    { DUP ; DIP { DROP } } ;
                  DIP { DROP } ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  PUSH unit Unit ;
                  TRANSFER_TOKENS ;
                  CONS }
                { NIL operation } ;
             DIP { DROP 3 } } ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ; DIG 2 ; DUP ; DUG 3 ; CAR ; SWAP ; EXEC }
                    { PUSH string "NOT_AUTHORIZED" ; FAILWITH } ;
                 DIP { DROP 3 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PACK ;
                 SHA512 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 NOW ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET ;
                 IF_NONE
                   { PUSH string "COMMITMENT_DOES_NOT_EXIST" ; FAILWITH }
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     INT ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     ADD ;
                     COMPARE ;
                     GE ;
                     IF { DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          INT ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          ADD ;
                          COMPARE ;
                          LE ;
                          IF { DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               NONE timestamp ;
                               SWAP ;
                               UPDATE ;
                               DIP { DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     CDR } ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               PAIR }
                             { PUSH string "COMMITMENT_TOO_RECENT" ; FAILWITH } }
                        { PUSH string "COMMITMENT_TOO_OLD" ; FAILWITH } ;
                     DIP { DROP } } ;
                 DIP { DROP 4 } ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { PUSH unit Unit }
                   { NOW ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     LE ;
                     IF { PUSH unit Unit } { PUSH string "LABEL_NOT_AVAILABLE" ; FAILWITH } ;
                     DIP { DROP } } ;
                 DIP { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 60 ;
                 PUSH nat 60 ;
                 PUSH nat 24 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CAR ;
                 MUL ;
                 MUL ;
                 MUL ;
                 INT ;
                 NOW ;
                 ADD ;
                 PUSH int 1 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 SUB ;
                 SOME ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SOME ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 EMPTY_MAP
                   string
                   (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                       (or (or string mutez) timestamp)) ;
                 NONE address ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CONTRACT %set_child_record
                   (pair (pair (pair (option %address address)
                                     (map %data
                                        string
                                        (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                                (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                            (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                               (pair (bytes %label) (address %owner)))
                         (pair (pair (bytes %parent) (option %ttl nat)) (option %validity timestamp))) ;
                 IF_NONE
                   { PUSH string "INVALID_NAME_REGISTRY_CONTRACT" ; FAILWITH }
                   { DUP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     TRANSFER_TOKENS ;
                     DIP { DROP } } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 PAIR ;
                 SOME ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 10 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "AMOUNT_NOT_ZERO" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 NOW ;
                 SOME ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 UPDATE ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIP { DROP 3 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { PUSH string "LABEL_DOES_NOT_EXIST" ; FAILWITH }
                   { DUP ;
                     CAR ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF { DUP } { PUSH string "LABEL_EXPIRED" ; FAILWITH } ;
                     DIP { DROP } } ;
                 DIP { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 60 ;
                 PUSH nat 60 ;
                 PUSH nat 24 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 MUL ;
                 MUL ;
                 MUL ;
                 INT ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 ADD ;
                 PUSH int 1 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 SUB ;
                 SOME ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CONTRACT %set_validity
                   (pair (pair (bytes %label) (bytes %parent)) (option %validity timestamp)) ;
                 IF_NONE
                   { PUSH string "INVALID_NAME_REGISTRY_CONTRACT" ; FAILWITH }
                   { DUP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     TRANSFER_TOKENS ;
                     DIP { DROP } } ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 CDR ;
                 UPDATE ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 9 } } ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
