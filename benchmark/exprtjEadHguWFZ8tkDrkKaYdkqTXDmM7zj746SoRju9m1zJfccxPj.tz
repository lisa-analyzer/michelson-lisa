{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %getAllowance (pair (contract %cb nat) (address %owner)) (address %spender)))
            (or (pair %getBalance (contract %cb nat) (address %owner))
                (contract %getTotalSupply nat)))
        (pair %transfer (pair (address %from_) (address %to_)) (nat %value))) ;
  storage
    (pair (big_map %allowance_assets (pair address address) nat)
          (big_map %ledger_assets address nat)) ;
  code { LAMBDA
           (pair (pair (big_map (pair address address) nat) (big_map address nat))
                 (pair address address))
           (pair (pair address address) nat)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (big_map (pair address address) nat) (big_map address nat))
                 (pair address address))
           bool
           { DUP ; CAR ; CAR ; DIG 1 ; DUP ; DUG 2 ; CDR ; MEM ; DIP { DROP } } ;
         LAMBDA
           (pair (pair (big_map (pair address address) nat) (big_map address nat)) address)
           (pair address nat)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     PAIR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SWAP ;
                     EXEC ;
                     IF { DUP ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          DIG 11 ;
                          DUP ;
                          DUG 12 ;
                          SWAP ;
                          EXEC ;
                          DUP ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CDR ;
                          COMPARE ;
                          GT ;
                          PUSH nat 0 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          COMPARE ;
                          GT ;
                          AND ;
                          IF { PUSH bool True ;
                               IF { DUP ; PUSH string "UnsafeAllowanceChange" ; PAIR ; FAILWITH }
                                  { PUSH unit Unit } }
                             { PUSH unit Unit } ;
                          DIP { DROP 2 } }
                        { PUSH unit Unit } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     DIG 11 ;
                     DUP ;
                     DUG 12 ;
                     SWAP ;
                     EXEC ;
                     IF { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          GET ;
                          IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          CDR ;
                          DIP { DROP } ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIP { DROP 2 } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          DUP ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          MEM ;
                          IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CDR ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIP { DROP 6 } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DROP 2 } } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 7 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 11 ;
                     DUP ;
                     DUG 12 ;
                     SWAP ;
                     EXEC ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 7 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 7 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     NIL operation ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     PUSH nat 10000000 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 4 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             COMPARE ;
             LT ;
             NOT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } { PUSH unit Unit } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { SENDER ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  PAIR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  SWAP ;
                  EXEC ;
                  DUP ;
                  CDR ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CDR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH bool True ;
                       IF { DUP ;
                            DIG 6 ;
                            DUP ;
                            DUG 7 ;
                            CDR ;
                            PAIR ;
                            PUSH string "NotEnoughAllowance" ;
                            PAIR ;
                            FAILWITH }
                          { PUSH unit Unit } }
                     { PUSH unit Unit } ;
                  SENDER ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  CAR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  PUSH int 0 ;
                  DIG 12 ;
                  DUP ;
                  DUG 13 ;
                  CDR ;
                  INT ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  SUB ;
                  COMPARE ;
                  GE ;
                  IF { DIG 11 ; DUP ; DUG 12 ; CDR ; INT ; DIG 4 ; DUP ; DUG 5 ; SUB ; ABS }
                     { PUSH string "cannot assign negative value to nat" ; FAILWITH } ;
                  DIP { DROP } ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  CDR ;
                  SWAP ;
                  PAIR ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP { DROP 7 } }
                { DIG 2 ; DUP ; DUG 3 } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PUSH int 0 ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CDR ;
             INT ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SUB ;
             COMPARE ;
             GE ;
             IF { DIG 9 ; DUP ; DUG 10 ; CDR ; INT ; DIG 4 ; DUP ; DUG 5 ; SUB ; ABS }
                { PUSH string "cannot assign negative value to nat" ; FAILWITH } ;
             DIP { DROP } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             MEM ;
             DIP { DROP } ;
             IF { DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CAR ;
                  CDR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 12 ;
                  DUP ;
                  DUG 13 ;
                  CDR ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  ADD ;
                  DIP { DROP } ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP { DROP 4 } }
                { DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  PUSH nat 0 ;
                  ADD ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  CAR ;
                  CDR ;
                  PAIR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DUP ;
                  CAR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  DUP ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  MEM ;
                  IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CDR ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIP { DROP 6 } ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP { DROP 2 } } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 11 } } ;
         DIP { DROP 5 } } }
