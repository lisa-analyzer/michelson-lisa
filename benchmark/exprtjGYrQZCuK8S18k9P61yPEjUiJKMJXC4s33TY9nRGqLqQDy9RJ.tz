{ parameter
    (or (or (or (pair %balance_of
                   (contract %callback
                      (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
                   (list %requests (pair (address %owner) (nat %token_id))))
                (pair %is_operator
                   (contract %callback
                      (pair (bool %is_operator)
                            (pair %operator
                               (address %operator)
                               (pair (address %owner) (or %tokens (unit %All_tokens) (set %Some_tokens nat))))))
                   (pair %operator
                      (address %operator)
                      (pair (address %owner) (or %tokens (unit %All_tokens) (set %Some_tokens nat))))))
            (or (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (string %symbol) (nat %token_id)))
                (or (contract %permissions_descriptor
                       (pair (pair (option %custom (pair (option %config_api address) (string %tag)))
                                   (or %operator
                                      (unit %No_transfer)
                                      (or (unit %Owner_or_operator_transfer) (unit %Owner_transfer))))
                             (pair (or %receiver
                                      (unit %Optional_owner_hook)
                                      (or (unit %Owner_no_op) (unit %Required_owner_hook)))
                                   (or %sender
                                      (unit %Optional_owner_hook)
                                      (or (unit %Owner_no_op) (unit %Required_owner_hook))))))
                    (address %set_administrator))))
        (or (or (bool %set_pause)
                (pair %token_metadata
                   (contract %callback
                      (list (pair (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))
                   (list %token_ids nat)))
            (or (pair %total_supply
                   (contract %callback (list (pair (nat %token_id) (nat %total_supply))))
                   (list %token_ids nat))
                (or (list %transfer
                       (pair (address %from_) (pair (address %to_) (pair (nat %token_id) (nat %amount)))))
                    (list %update_operators
                       (or (pair %Add_operator
                              (address %owner)
                              (pair (address %operator) (or %tokens (unit %All_tokens) (set %Some_tokens nat))))
                           (pair %Remove_operator
                              (address %owner)
                              (pair (address %operator) (or %tokens (unit %All_tokens) (set %Some_tokens nat)))))))))) ;
  storage
    (pair (pair (address %administrator) (nat %all_tokens))
          (pair (big_map %ledger (pair address nat) (pair (nat %balance) (set %operators address)))
                (pair (bool %paused)
                      (big_map %tokens
                         nat
                         (pair (pair %metadata
                                  (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string)))))
                               (nat %total_supply)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     PUSH (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))) {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     ITER { SWAP ;
                            DUP ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            PAIR %owner %token_id ;
                            DIG 5 ;
                            DUP ;
                            DUG 6 ;
                            { CDR ; CAR } ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            CDR ;
                            DIG 5 ;
                            DUP ;
                            DUG 6 ;
                            CAR ;
                            PAIR ;
                            GET ;
                            { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                            CAR ;
                            PAIR %balance %request ;
                            CONS ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DROP } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     NIL (pair (nat %balance) (pair %request (address %owner) (nat %token_id))) ;
                     SWAP ;
                     ITER { CONS } ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP }
                   { PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     IF_LEFT
                       { DROP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         { CAR ; CDR } ;
                         PUSH nat 0 ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GT ;
                         LOOP { DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CAR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                { CDR ; CDR ; CAR } ;
                                PAIR ;
                                MEM ;
                                IF {}
                                   { DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     { CAR ; CDR } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     LT ;
                                     IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     { CDR ; CDR ; CAR } ;
                                     PAIR ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DUG 5 ;
                                     DIG 4 ;
                                     DROP } ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CAR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                { CDR ; CDR ; CAR } ;
                                PAIR ;
                                GET ;
                                { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                CDR ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CAR } ;
                                MEM ;
                                IF {}
                                   { DIG 2 ;
                                     DUP ;
                                     IF { PUSH bool False } { PUSH bool False } ;
                                     SWAP ;
                                     DROP ;
                                     DUG 2 } ;
                                PUSH nat 1 ;
                                ADD ;
                                DUP ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                COMPARE ;
                                GT } ;
                         DROP 2 }
                       { DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                         ITER { DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CDR ; CAR } ;
                                PAIR ;
                                MEM ;
                                IF {}
                                   { DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     { CAR ; CDR } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     LT ;
                                     IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     { CDR ; CDR ; CAR } ;
                                     PAIR ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DUG 4 ;
                                     DIG 3 ;
                                     DROP } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CDR ; CAR } ;
                                PAIR ;
                                GET ;
                                { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                CDR ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR } ;
                                MEM ;
                                IF {}
                                   { SWAP ;
                                     DUP ;
                                     IF { PUSH bool False } { PUSH bool False } ;
                                     SWAP ;
                                     DROP ;
                                     SWAP } ;
                                DROP } } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR %is_operator %operator ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     { CAR ; CDR } ;
                     DUP ;
                     PUSH nat 1 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     { CDR ; CDR } ;
                     ADD ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CAR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CAR } ;
                     PAIR ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CDR ; CDR } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                          CDR ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CDR } ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          { CDR ; CAR } ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          { CDR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                          CAR ;
                          ADD ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          PUSH (set address) {} ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CAR ; CDR } ;
                          PAIR %balance %operators ;
                          SOME ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CDR ; CDR } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                          CAR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CAR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CDR ; CDR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CDR ; CDR } ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:330" ; FAILWITH } {} } ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CAR ; CDR } ;
                          PUSH (pair (string %name) (pair (nat %decimals) (map %extras string string)))
                               (Pair "" (Pair 0 {})) ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CDR ; CAR } ;
                          PAIR %symbol ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CDR ; CDR } ;
                          PAIR %token_id ;
                          PAIR %metadata %total_supply ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } ;
                     DROP ;
                     NIL operation }
                   { IF_LEFT
                       { DUP ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         PUSH (pair (pair (option %custom (pair (option %config_api address) (string %tag)))
                                          (or %operator
                                             (unit %No_transfer)
                                             (or (unit %Owner_or_operator_transfer) (unit %Owner_transfer))))
                                    (pair (or %receiver
                                             (unit %Optional_owner_hook)
                                             (or (unit %Owner_no_op) (unit %Required_owner_hook)))
                                          (or %sender
                                             (unit %Optional_owner_hook)
                                             (or (unit %Owner_no_op) (unit %Required_owner_hook)))))
                              (Pair (Pair None (Right (Left Unit))) (Pair (Right (Left Unit)) (Right (Left Unit)))) ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DROP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         { CAR ; CDR } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 ;
                         NIL operation } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     PUSH (list (pair (nat %token_id)
                                      (pair (string %symbol)
                                            (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                          {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     ITER { SWAP ;
                            DUP ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            { CDR ; CDR ; CDR } ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            GET ;
                            { IF_NONE { PUSH string "Get-item:422" ; FAILWITH } {} } ;
                            CAR ;
                            CONS ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DROP } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     NIL (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))) ;
                     SWAP ;
                     ITER { CONS } ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     PUSH (list (pair (nat %token_id) (nat %total_supply))) {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     ITER { SWAP ;
                            DUP ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            { CDR ; CDR ; CDR } ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            GET ;
                            { IF_NONE { PUSH string "Get-item:408" ; FAILWITH } {} } ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            PAIR %token_id %total_supply ;
                            CONS ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DROP } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     NIL (pair (nat %token_id) (nat %total_supply)) ;
                     SWAP ;
                     ITER { CONS } ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CAR } ;
                         IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                         DUP ;
                         ITER { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CAR ; CAR } ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF { PUSH bool True }
                                   { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     { CDR ; CAR } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     { CDR ; CDR ; CAR } ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     PAIR ;
                                     GET ;
                                     { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                     CDR ;
                                     SENDER ;
                                     MEM } ;
                                IF {} { PUSH string "NOT_OPERATOR" ; FAILWITH } ;
                                DUP ;
                                { CDR ; CDR ; CDR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CDR ; CDR ; CAR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                CAR ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                { CDR ; CDR ; CAR } ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                CAR ;
                                PAIR ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                CDR ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                { CDR ; CDR ; CDR } ;
                                DIG 8 ;
                                DUP ;
                                DUG 9 ;
                                { CDR ; CAR } ;
                                DIG 7 ;
                                DUP ;
                                DUG 8 ;
                                { CDR ; CDR ; CAR } ;
                                DIG 8 ;
                                DUP ;
                                DUG 9 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                CAR ;
                                SUB ;
                                ISNAT ;
                                { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUG 3 ;
                                DIG 2 ;
                                DROP ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CDR ; CAR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                { CDR ; CDR ; CAR } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CDR ; CAR } ;
                                PAIR ;
                                MEM ;
                                IF { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     { CDR ; CDR ; CAR } ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     { CDR ; CAR } ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                     CDR ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     { CDR ; CDR ; CDR } ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     { CDR ; CAR } ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     { CDR ; CDR ; CAR } ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     { CDR ; CAR } ;
                                     PAIR ;
                                     GET ;
                                     { IF_NONE { PUSH string "Get-item:157" ; FAILWITH } {} } ;
                                     CAR ;
                                     ADD ;
                                     PAIR ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DUG 3 ;
                                     DIG 2 ;
                                     DROP }
                                   { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     PUSH (set address) {} ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     { CDR ; CDR ; CDR } ;
                                     PAIR %balance %operators ;
                                     SOME ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     { CDR ; CDR ; CAR } ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     { CDR ; CAR } ;
                                     PAIR ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DUG 3 ;
                                     DIG 2 ;
                                     DROP } ;
                                DROP } ;
                         DROP }
                       { DUP ;
                         ITER { DUP ;
                                IF_LEFT
                                  { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 2 ; DUP ; DUG 3 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF {}
                                       { PUSH string
                                              "WrongCondition: (update.open_variant('Add_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                         FAILWITH } ;
                                    DUP ;
                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                    { CDR ; CDR } ;
                                    IF_LEFT
                                      { DROP ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        { CAR ; CDR } ;
                                        PUSH nat 0 ;
                                        DUP ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        COMPARE ;
                                        GT ;
                                        LOOP { DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               { CDR ; CAR } ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               CAR ;
                                               PAIR ;
                                               MEM ;
                                               IF {}
                                                  { DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    { CAR ; CDR } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    LT ;
                                                    IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DUP ;
                                                    CAR ;
                                                    SWAP ;
                                                    CDR ;
                                                    DUP ;
                                                    CDR ;
                                                    SWAP ;
                                                    CAR ;
                                                    PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DIG 7 ;
                                                    DUP ;
                                                    DUG 8 ;
                                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                                    CAR ;
                                                    PAIR ;
                                                    UPDATE ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 5 ;
                                                    DIG 4 ;
                                                    DROP } ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DIG 7 ;
                                               DUP ;
                                               DUG 8 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool True ;
                                               DIG 9 ;
                                               DUP ;
                                               DUG 10 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               { CDR ; CAR } ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 5 ;
                                               DIG 4 ;
                                               DROP ;
                                               PUSH nat 1 ;
                                               ADD ;
                                               DUP ;
                                               DIG 2 ;
                                               DUP ;
                                               DUG 3 ;
                                               COMPARE ;
                                               GT } ;
                                        DROP 2 }
                                      { DROP ;
                                        DUP ;
                                        IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                        { CDR ; CDR } ;
                                        IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                        ITER { DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               { CDR ; CAR } ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               CAR ;
                                               PAIR ;
                                               MEM ;
                                               IF {}
                                                  { DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    { CAR ; CDR } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    LT ;
                                                    IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    DUP ;
                                                    CAR ;
                                                    SWAP ;
                                                    CDR ;
                                                    DUP ;
                                                    CDR ;
                                                    SWAP ;
                                                    CAR ;
                                                    PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DIG 6 ;
                                                    DUP ;
                                                    DUG 7 ;
                                                    IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                                    CAR ;
                                                    PAIR ;
                                                    UPDATE ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 4 ;
                                                    DIG 3 ;
                                                    DROP } ;
                                               DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DIG 6 ;
                                               DUP ;
                                               DUG 7 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool True ;
                                               DIG 8 ;
                                               DUP ;
                                               DUG 9 ;
                                               IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } ;
                                               { CDR ; CAR } ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 4 ;
                                               DROP ;
                                               DIG 2 ;
                                               DROP } } }
                                  { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 2 ; DUP ; DUG 3 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF {}
                                       { PUSH string
                                              "WrongCondition: (update.open_variant('Remove_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                         FAILWITH } ;
                                    DUP ;
                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                    { CDR ; CDR } ;
                                    IF_LEFT
                                      { DROP ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        { CAR ; CDR } ;
                                        PUSH nat 0 ;
                                        DUP ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        COMPARE ;
                                        GT ;
                                        LOOP { DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               { CDR ; CAR } ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               CAR ;
                                               PAIR ;
                                               MEM ;
                                               IF {}
                                                  { DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    { CAR ; CDR } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    LT ;
                                                    IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DUP ;
                                                    CAR ;
                                                    SWAP ;
                                                    CDR ;
                                                    DUP ;
                                                    CDR ;
                                                    SWAP ;
                                                    CAR ;
                                                    PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DIG 7 ;
                                                    DUP ;
                                                    DUG 8 ;
                                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                                    CAR ;
                                                    PAIR ;
                                                    UPDATE ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 5 ;
                                                    DIG 4 ;
                                                    DROP } ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DIG 7 ;
                                               DUP ;
                                               DUG 8 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool False ;
                                               DIG 9 ;
                                               DUP ;
                                               DUG 10 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               { CDR ; CAR } ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 5 ;
                                               DIG 4 ;
                                               DROP ;
                                               PUSH nat 1 ;
                                               ADD ;
                                               DUP ;
                                               DIG 2 ;
                                               DUP ;
                                               DUG 3 ;
                                               COMPARE ;
                                               GT } ;
                                        DROP 2 }
                                      { DROP ;
                                        DUP ;
                                        IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                        { CDR ; CDR } ;
                                        IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                        ITER { DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               { CDR ; CAR } ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               CAR ;
                                               PAIR ;
                                               MEM ;
                                               IF {}
                                                  { DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    { CAR ; CDR } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    LT ;
                                                    IF {} { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    DUP ;
                                                    CAR ;
                                                    SWAP ;
                                                    CDR ;
                                                    DUP ;
                                                    CDR ;
                                                    SWAP ;
                                                    CAR ;
                                                    PUSH (option (pair (nat %balance) (set %operators address))) (Some (Pair 0 {})) ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    DIG 6 ;
                                                    DUP ;
                                                    DUG 7 ;
                                                    IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                                    CAR ;
                                                    PAIR ;
                                                    UPDATE ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 4 ;
                                                    DIG 3 ;
                                                    DROP } ;
                                               DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DIG 6 ;
                                               DUP ;
                                               DUG 7 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool False ;
                                               DIG 8 ;
                                               DUP ;
                                               DUG 9 ;
                                               IF_LEFT { DROP ; PUSH unit Unit ; FAILWITH } {} ;
                                               { CDR ; CAR } ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 4 ;
                                               DROP ;
                                               DIG 2 ;
                                               DROP } } } ;
                                DROP } ;
                         DROP } ;
                     NIL operation } } } ;
         PAIR } }
