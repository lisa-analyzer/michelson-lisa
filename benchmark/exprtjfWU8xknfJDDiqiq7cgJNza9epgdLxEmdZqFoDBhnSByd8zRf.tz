{ storage (pair (address %administrator) (big_map %bytesScripts bytes bytes)) ;
  parameter (or (unit %buildCreateAndPlay) (address %sendCreateAndPlay)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DROP ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH string "callCreateSubsciption" ;
             PACK ;
             LAMBDA
               (pair (pair (address %_investor)
                           (pair (address %_issuer) (map %_operatorsAuthorizations address (set nat))))
                     (pair (pair (nat %_quantity) (address %_sender))
                           (pair (nat %_subscriptionId)
                                 (pair %_subscriptionTicketManager
                                    (map %balances address (pair (nat %keyIndex) (nat %value)))
                                    (pair (map %subscriptionTicket
                                             nat
                                             (pair (address %investor) (pair (nat %quantity) (nat %status))))
                                          (map %subscriptionsIdByIssuer address (set nat)))))))
               (pair (map %balances address (pair (nat %keyIndex) (nat %value)))
                     (pair (map %subscriptionTicket
                              nat
                              (pair (address %investor) (pair (nat %quantity) (nat %status))))
                           (map %subscriptionsIdByIssuer address (set nat))))
               { DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                 PUSH nat 42 ;
                 MEM ;
                 IF {}
                    { PUSH string "only operator with registrar role can lock token" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF { PUSH string "subscriptionId already in use" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PUSH nat 1 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR %quantity %status ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR %investor ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF {}
                    { DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      PUSH (option (set nat)) (Some {}) ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR } ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 181 ; FAILWITH } {} ;
                 PUSH bool True ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 UPDATE ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 185 ; FAILWITH } {} ;
                 ITER { PUSH nat 2 ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CDR ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        GET ;
                        IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        IF { DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             SWAP ;
                             GET ;
                             IF_NONE { PUSH int 191 ; FAILWITH } {} ;
                             CDR ;
                             CAR ;
                             ADD }
                           { DROP } } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 183 ; FAILWITH } {} ;
                 CDR ;
                 SWAP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 COMPARE ;
                 LE ;
                 IF { DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 196 ; FAILWITH } {} ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH nat 2 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 199 ; FAILWITH } {} ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH nat 255 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR } } ;
             SOME ;
             IF_NONE { PUSH int 336 ; FAILWITH } {} ;
             PACK ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH string "callPlayTransition" ;
             PACK ;
             LAMBDA
               (pair (pair (map %_operatorsAuthorizations address (set nat))
                           (pair (address %_owner) (address %_sender)))
                     (pair (nat %_state)
                           (pair (nat %_subscriptionId)
                                 (pair %_subscriptionTicketManager
                                    (map %balances address (pair (nat %keyIndex) (nat %value)))
                                    (pair (map %subscriptionTicket
                                             nat
                                             (pair (address %investor) (pair (nat %quantity) (nat %status))))
                                          (map %subscriptionsIdByIssuer address (set nat)))))))
               (pair (map %balances address (pair (nat %keyIndex) (nat %value)))
                     (pair (map %subscriptionTicket
                              nat
                              (pair (address %investor) (pair (nat %quantity) (nat %status))))
                           (map %subscriptionsIdByIssuer address (set nat))))
               { DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                 PUSH nat 2 ;
                 MEM ;
                 IF {}
                    { PUSH string "only operator with settler role can settle token" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 PUSH nat 3 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True } { DUP ; CDR ; CAR ; PUSH nat 4 ; COMPARE ; EQ } ;
                 IF {} { PUSH string "state not defined" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH nat 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH nat 2 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                      CDR ;
                      CDR ;
                      COMPARE ;
                      EQ ;
                      IF {} { PUSH string "subscription ticket not locked" ; FAILWITH } ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                      CAR ;
                      MEM ;
                      IF {}
                         { DUP ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DIG 2 ;
                           CDR ;
                           CAR ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           GET ;
                           IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                           CAR ;
                           PUSH (option (pair (nat %keyIndex) (nat %value))) (Some (Pair 0 0)) ;
                           SWAP ;
                           UPDATE ;
                           PAIR } ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 237 ; FAILWITH } {} ;
                      CDR ;
                      INT ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 230 ; FAILWITH } {} ;
                      CDR ;
                      CAR ;
                      DIG 2 ;
                      ADD ;
                      SWAP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 230 ; FAILWITH } {} ;
                      CDR ;
                      CAR ;
                      INT ;
                      SWAP ;
                      SUB ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 5 ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 242 ; FAILWITH } {} ;
                      CAR ;
                      DIG 5 ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 243 ; FAILWITH } {} ;
                      CAR ;
                      DIG 4 ;
                      ISNAT ;
                      IF_NONE { PUSH int 243 ; FAILWITH } {} ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 245 ; FAILWITH } {} ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH nat 3 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    {} ;
                 PUSH nat 4 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH nat 3 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 91 ; FAILWITH } {} ;
                      CDR ;
                      CDR ;
                      COMPARE ;
                      EQ ;
                      IF {} { PUSH string "Cash Not received" ; FAILWITH } ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 252 ; FAILWITH } {} ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH nat 4 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { SWAP ; DROP } } ;
             SOME ;
             IF_NONE { PUSH int 339 ; FAILWITH } {} ;
             PACK ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH string "callAuthorizeOperator" ;
             PACK ;
             LAMBDA
               (pair (pair (address %_operator) (nat %_operatorRole))
                     (pair (map %_operatorsAuthorizations address (set nat))
                           (pair (address %_owner) (address %_sender))))
               (map address (set nat))
               { DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                 PUSH nat 42 ;
                 MEM ;
                 IF {}
                    { PUSH string "only operator with registrar role can lock token" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 MEM ;
                 IF {}
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      PUSH (option (set nat)) (Some {}) ;
                      SWAP ;
                      UPDATE } ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 283 ; FAILWITH } {} ;
                 PUSH bool True ;
                 DIG 4 ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 SOME ;
                 SWAP ;
                 UPDATE } ;
             SOME ;
             IF_NONE { PUSH int 342 ; FAILWITH } {} ;
             PACK ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH string "callRevokeOperatorAuthorization" ;
             PACK ;
             LAMBDA
               (pair (pair (address %_operator) (nat %_operatorRole))
                     (pair (map %_operatorsAuthorizations address (set nat))
                           (pair (address %_owner) (address %_sender))))
               (map address (set nat))
               { DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                 PUSH nat 42 ;
                 MEM ;
                 IF {}
                    { PUSH string "only operator with registrar role can lock token" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator" ; FAILWITH } ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 308 ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "undefined operator role" ; FAILWITH } ;
                 NONE (set nat) ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 UPDATE } ;
             SOME ;
             IF_NONE { PUSH int 345 ; FAILWITH } {} ;
             PACK ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             NIL operation }
           { CONTRACT %upgrade (map bytes bytes) ;
             NIL operation ;
             SWAP ;
             IF_NONE { PUSH int 359 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             EMPTY_MAP bytes bytes ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             PUSH string "callAuthorizeOperator" ;
             PACK ;
             GET ;
             IF_NONE { PUSH int 350 ; FAILWITH } {} ;
             SOME ;
             PUSH string "callAuthorizeOperator" ;
             PACK ;
             UPDATE ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             PUSH string "callCreateSubsciption" ;
             PACK ;
             GET ;
             IF_NONE { PUSH int 350 ; FAILWITH } {} ;
             SOME ;
             PUSH string "callCreateSubsciption" ;
             PACK ;
             UPDATE ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             PUSH string "callPlayTransition" ;
             PACK ;
             GET ;
             IF_NONE { PUSH int 350 ; FAILWITH } {} ;
             SOME ;
             PUSH string "callPlayTransition" ;
             PACK ;
             UPDATE ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             PUSH string "callRevokeOperatorAuthorization" ;
             PACK ;
             GET ;
             IF_NONE { PUSH int 350 ; FAILWITH } {} ;
             SOME ;
             PUSH string "callRevokeOperatorAuthorization" ;
             PACK ;
             UPDATE ;
             TRANSFER_TOKENS ;
             CONS } ;
         PAIR } }
