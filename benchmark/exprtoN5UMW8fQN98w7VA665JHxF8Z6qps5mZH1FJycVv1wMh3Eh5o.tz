{ parameter
    (or (or (or (pair %approve address nat)
                (pair %getAllowance (pair address address) (contract nat)))
            (or (pair %getBalance address (contract nat))
                (pair %getTokenMetadata
                   unit
                   (contract
                      (pair (pair (nat %decimals) (map %extras string string))
                            (pair (string %name) (string %symbol)))))))
        (or (pair %getTotalSupply unit (contract nat))
            (pair %transfer address (pair address nat)))) ;
  storage
    (pair (big_map %accounts address (pair (map %allowances address nat) (nat %balance)))
          (pair %s
             (pair %token_metadata
                (pair (nat %decimals) (map %extras string string))
                (pair (string %name) (string %symbol)))
             (nat %total_supply))) ;
  code { LAMBDA
           (pair (pair string address) (big_map address (pair (map address nat) nat)))
           (pair (map address nat) nat)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE
               { PUSH string ": owner does not exist in accounts" ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CONCAT ;
                 FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (pair (pair string address) (pair (map address nat) nat))
           nat
           { DUP ;
             CDR ;
             PUSH nat 0 ;
             SENDER ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             COMPARE ;
             NEQ ;
             IF { DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  SENDER ;
                  GET ;
                  IF_NONE
                    { PUSH string ": owner does not have an allowance" ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      CONCAT ;
                      FAILWITH }
                    { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP { DROP 2 } }
                { DUP ; DIG 2 ; DUP ; DUG 3 ; CDR ; DIP { DROP } } ;
             DUP ;
             DIP { DROP 4 } } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "this contract do not accept xtz" ; FAILWITH }
            { PUSH unit Unit } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DUP }
                        { DUP ;
                          CAR ;
                          SENDER ;
                          PUSH string "approve" ;
                          PAIR ;
                          PAIR ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          SWAP ;
                          EXEC ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          CAR ;
                          CDR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DROP 3 } } ;
                     DUP ;
                     DIP { DROP 4 } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PUSH string "get_allowance" ;
                     PAIR ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     PUSH string "get_allowance" ;
                     PAIR ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP { DROP 3 } ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PUSH string "get_account" ;
                     PAIR ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP { DROP 2 } ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     NIL operation ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP { DROP } ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PAIR ;
                 NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIP { DROP } ;
                 PAIR ;
                 DIP { DROP } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 COMPARE ;
                 EQ ;
                 IF { DUP }
                    { DUP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      PUSH bool False ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      SENDER ;
                      COMPARE ;
                      NEQ ;
                      IF { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           CAR ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           GET ;
                           IF_NONE
                             { PUSH string "is_allowed: the owner does not own any tokens." ; FAILWITH }
                             { DUP ;
                               CAR ;
                               SENDER ;
                               GET ;
                               IF_NONE
                                 { DIG 1 ; DUP ; DUG 2 ; DROP ; PUSH bool False }
                                 { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   COMPARE ;
                                   GE ;
                                   DIP { DROP 2 } } ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIP { DROP 3 } } ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           DIP { DROP 2 } }
                         { PUSH bool True } ;
                      DUP ;
                      DIP { DROP 4 } ;
                      IF { PUSH unit Unit }
                         { PUSH string "transfer: sender not allowed to spend token from owner" ;
                           FAILWITH } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PUSH string "transfer" ;
                      PAIR ;
                      PAIR ;
                      DIG 12 ;
                      DUP ;
                      DUG 13 ;
                      SWAP ;
                      EXEC ;
                      DUP ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      COMPARE ;
                      GT ;
                      IF { PUSH string "transfer: owner balance is too low" ; FAILWITH }
                         { PUSH unit Unit } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      PUSH string "transfer" ;
                      PAIR ;
                      PAIR ;
                      DIG 13 ;
                      DUP ;
                      DUG 14 ;
                      SWAP ;
                      EXEC ;
                      DUP ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      COMPARE ;
                      GT ;
                      IF { PUSH string "transfer: allowance is too low" ; FAILWITH }
                         { PUSH unit Unit } ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      SUB ;
                      PUSH int 0 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      GE ;
                      IF { DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           ABS ;
                           SWAP ;
                           CAR ;
                           PAIR ;
                           DIP { DROP } }
                         { PUSH string "transfer: balance - value is negative." ; FAILWITH } ;
                      SENDER ;
                      DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      COMPARE ;
                      NEQ ;
                      IF { DIG 8 ;
                           DUP ;
                           DUG 9 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           SUB ;
                           PUSH int 0 ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           GE ;
                           IF { DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                ABS ;
                                SOME ;
                                SENDER ;
                                UPDATE ;
                                SWAP ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                DIP { DROP 2 } }
                              { PUSH string "transfer: allowance - value is negative." ; FAILWITH } ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           DIP { DROP 3 } }
                         { DUP } ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 14 ;
                      DUP ;
                      DUG 15 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      PUSH nat 0 ;
                      EMPTY_MAP address nat ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      DIG 13 ;
                      DUP ;
                      DUG 14 ;
                      GET ;
                      IF_NONE
                        { DUP }
                        { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
                      DUP ;
                      DIG 13 ;
                      DUP ;
                      DUG 14 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      ADD ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 12 ;
                      DUP ;
                      DUG 13 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIP { DROP } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 18 ;
                      DUP ;
                      DUG 19 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      DIP { DROP 13 } } ;
                 DUP ;
                 DIP { DROP 6 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 5 } } }
