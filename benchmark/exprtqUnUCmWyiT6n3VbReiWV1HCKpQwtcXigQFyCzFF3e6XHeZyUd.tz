{ parameter (or (unit %allSigned) (or (unit %cancelSwap) (bytes %knownSecret))) ;
  storage
    (pair (pair (address %counterparty) (timestamp %epoch))
          (pair (bytes %hashedSecret) (pair (mutez %notional) (address %owner)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { PUSH mutez 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CDR ; CDR ; CAR } ;
             COMPARE ;
             NEQ ;
             IF {}
                { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } ;
             SENDER ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CDR ; CDR ; CDR } ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CAR ; CAR } ;
             CONTRACT unit ;
             { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             { CDR ; CDR ; CAR } ;
             PUSH unit Unit ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             { CDR ; CDR } ;
             PUSH mutez 0 ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUG 3 ;
             DIG 2 ;
             DROP ;
             SWAP ;
             DROP }
           { IF_LEFT
               { PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CAR } ;
                 COMPARE ;
                 NEQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CDR } ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } ;
                 NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CDR } ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: self.data.epoch < sp.now" ; FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CDR } ;
                 CONTRACT unit ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR ; CAR } ;
                 PUSH unit Unit ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 PUSH mutez 0 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 3 ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DROP }
               { PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CAR } ;
                 COMPARE ;
                 NEQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.counterparty == sp.sender" ;
                      FAILWITH } ;
                 DUP ;
                 BLAKE2B ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.hashedSecret == sp.blake2b(params.secret)" ;
                      FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 CONTRACT unit ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR ; CAR } ;
                 PUSH unit Unit ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 PUSH mutez 0 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 3 ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DROP } } ;
         PAIR } }
