{ parameter
    (or (or (or (pair %run string bytes)
                (pair %upgrade
                   (nat :newVersion)
                   (pair (lambda :migrationScript (big_map bytes bytes) (big_map bytes bytes))
                         (lambda :newCode
                            (pair (pair string bytes) (big_map bytes bytes))
                            (pair (list operation) (big_map bytes bytes))))))
            (or (pair %getVersion unit (contract nat)) (address %setAdministrator)))
        (or (or (nat %epwBeginUpgrade)
                (lambda %epwApplyMigration (big_map bytes bytes) (big_map bytes bytes)))
            (or (lambda %epwSetCode
                   (pair (pair string bytes) (big_map bytes bytes))
                   (pair (list operation) (big_map bytes bytes)))
                (unit %epwFinishUpgrade)))) ;
  storage
    (pair (big_map bytes bytes)
          (pair (pair (lambda
                         (pair (pair string bytes) (big_map bytes bytes))
                         (pair (list operation) (big_map bytes bytes)))
                      address)
                (pair nat bool))) ;
  code { CAST (pair (or (or (or (pair string bytes)
                                (pair nat
                                      (pair (lambda (big_map bytes bytes) (big_map bytes bytes))
                                            (lambda
                                               (pair (pair string bytes) (big_map bytes bytes))
                                               (pair (list operation) (big_map bytes bytes))))))
                            (or (pair unit (contract nat)) address))
                        (or (or nat (lambda (big_map bytes bytes) (big_map bytes bytes)))
                            (or (lambda
                                   (pair (pair string bytes) (big_map bytes bytes))
                                   (pair (list operation) (big_map bytes bytes)))
                                unit)))
                    (pair (big_map bytes bytes)
                          (pair (pair (lambda
                                         (pair (pair string bytes) (big_map bytes bytes))
                                         (pair (list operation) (big_map bytes bytes)))
                                      address)
                                (pair nat bool)))) ;
         DUP ;
         CAR ;
         DIP { CDR } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIP { DUP ;
                           CDR ;
                           CDR ;
                           CDR ;
                           IF { UNIT ; PUSH nat 52 ; PAIR ; FAILWITH } {} ;
                           DUP ;
                           CAR ;
                           DIP { DUP ; CDR ; CAR ; CAR } } ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     CAR ;
                     DIP { CDR } ;
                     DIP { DIP { DUP ; DIP { CDR } ; CAR } ; SWAP ; DROP ; PAIR } ;
                     PAIR }
                   { DIP { DUP ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                           DUP ;
                           CDR ;
                           CDR ;
                           CDR ;
                           IF { UNIT ; PUSH nat 52 ; PAIR ; FAILWITH } {} } ;
                     DUP ;
                     DIP { CAR ;
                           DIP { DUP ; CDR } ;
                           DIP { DUP ; DIP { CAR } ; CDR } ;
                           DIP { DUP ; DIP { CDR } ; CAR } ;
                           SWAP ;
                           DROP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           DIP { DUP ; DIP { CAR } ; CDR } ;
                           SWAP ;
                           DROP ;
                           SWAP ;
                           PAIR } ;
                     DUP ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DIP { DIP { DUP ; CAR } ;
                           SWAP ;
                           EXEC ;
                           DIP { DUP ; DIP { CDR } ; CAR } ;
                           SWAP ;
                           DROP ;
                           PAIR } ;
                     CDR ;
                     CDR ;
                     DIP { DUP ; CDR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     SWAP ;
                     DROP ;
                     PAIR ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DUP ;
                     CAR ;
                     DIP { CDR } ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIP { AMOUNT } ;
                     TRANSFER_TOKENS ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     PAIR }
                   { DIP { DUP ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                           DUP ;
                           CDR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { DIP { DUP ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                           DUP ;
                           CDR ;
                           CDR ;
                           CDR ;
                           IF { UNIT ; PUSH nat 52 ; PAIR ; FAILWITH } {} } ;
                     DIP { DUP ; CDR } ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     SWAP ;
                     DROP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIP { CAR } ;
                     CDR ;
                     DUP ;
                     DIP { CAR } ;
                     CDR ;
                     PUSH bool True ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIP { DUP ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                           DUP ;
                           CDR ;
                           CDR ;
                           CDR ;
                           IF {} { UNIT ; PUSH nat 98 ; PAIR ; FAILWITH } } ;
                     DIP { DUP ; CAR } ;
                     SWAP ;
                     EXEC ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     SWAP ;
                     DROP ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIP { DUP ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                           DUP ;
                           CDR ;
                           CDR ;
                           CDR ;
                           IF {} { UNIT ; PUSH nat 98 ; PAIR ; FAILWITH } } ;
                     DIP { DUP ; CDR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     DIP { DUP ; DIP { CDR } ; CAR } ;
                     SWAP ;
                     DROP ;
                     PAIR ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { UNIT ; PUSH nat 40 ; PAIR ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     IF {} { UNIT ; PUSH nat 98 ; PAIR ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIP { CAR } ;
                     CDR ;
                     DUP ;
                     DIP { CAR } ;
                     CDR ;
                     PUSH bool False ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIP { DUP ; DIP { CAR } ; CDR } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } } } }
