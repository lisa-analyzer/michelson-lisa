{ parameter
    (or (or (pair %add (nat %addAmount) (bytes %hashedSecret))
            (pair %initiate
               (pair (pair (bytes %hashedSecret) (address %participant))
                     (pair (nat %payoffAmount) (timestamp %refundTime)))
               (pair (nat %totalAmount) (contract %transferEntry (pair address (pair address nat))))))
        (or (bytes %redeem) (bytes %refund))) ;
  storage
    (big_map
       bytes
       (pair (pair (pair (address %initiator) (address %participant))
                   (pair (nat %payoffAmount) (timestamp %refundTime)))
             (pair (address %tokenAddress) (nat %totalAmount)))) ;
  code { DUP ;
         CDR ;
         AMOUNT ;
         PUSH mutez 0 ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "this contract does not accept tez" ; FAILWITH }
            { PUSH unit Unit } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { PUSH string "no swap for such hash" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIP { DROP } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF { PUSH string "refund time has already come" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 CONTRACT (pair address (pair address nat)) ;
                 IF_NONE
                   { PUSH string "expected transfer entrypoint" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 2 } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 9 } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "payoff amount exceeds the total" ; FAILWITH }
                    { PUSH unit Unit } ;
                 NOW ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 LE ;
                 IF { PUSH string "refund time has already come" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SIZE ;
                 PUSH nat 32 ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "hash size doesn't equal 32 bytes" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "SOURCE cannot act as participant" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "SENDER cannot act as participant" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CAR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 CDR ;
                 ADDRESS ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DROP } }
                   { PUSH string "swap for this hash is already initiated" ; FAILWITH } ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CDR ;
                 CAR ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 SENDER ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 2 } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 12 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 SIZE ;
                 PUSH nat 32 ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "secret size doesn't equal 32 bytes" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SHA256 ;
                 SHA256 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { PUSH string "no swap for such hash" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIP { DROP } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF { PUSH string "refund time has already come" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 NONE (pair (pair (pair (address %initiator) (address %participant))
                                  (pair (nat %payoffAmount) (timestamp %refundTime)))
                            (pair (address %tokenAddress) (nat %totalAmount))) ;
                 SWAP ;
                 UPDATE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 CONTRACT (pair address (pair address nat)) ;
                 IF_NONE
                   { PUSH string "expected transfer entrypoint" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ABS ;
                 DUP ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 SELF ;
                 ADDRESS ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 2 } ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 PUSH nat 0 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { NIL operation ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      SENDER ;
                      PAIR ;
                      SELF ;
                      ADDRESS ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      PUSH mutez 0 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      DUP ;
                      DIP { DROP 2 } ;
                      CONS }
                    { NIL operation } ;
                 DIP { DROP } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 13 } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { PUSH string "no swap for such hash" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIP { DROP } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "refund time hasn't come" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 NONE (pair (pair (pair (address %initiator) (address %participant))
                                  (pair (nat %payoffAmount) (timestamp %refundTime)))
                            (pair (address %tokenAddress) (nat %totalAmount))) ;
                 SWAP ;
                 UPDATE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 CONTRACT (pair address (pair address nat)) ;
                 IF_NONE
                   { PUSH string "expected transfer entrypoint" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 SELF ;
                 ADDRESS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 2 } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 9 } } ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
