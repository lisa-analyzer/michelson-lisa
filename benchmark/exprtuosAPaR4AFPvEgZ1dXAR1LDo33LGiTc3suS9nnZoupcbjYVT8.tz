{ storage
    (pair (pair (pair (bool %alreadyRegistered) (pair (int %counter) (address %creator)))
                (pair (int %debug) (pair (int %nextDices) (address %nextPlayer))))
          (pair (pair (int %nextPlayerIdx)
                      (pair (address %originator_address) (key %originator_pubKey)))
                (pair (map %players int address) (pair (set %playersSet address) (string %status))))) ;
  parameter
    (or (or (unit %end) (or (unit %freeze) (unit %play)))
        (or (or (pair %register (int %random) (signature %signature)) (unit %resume))
            (or (address %setCreator) (pair %start (int %initialBalance) (address %token))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { IF_LEFT
                 { { PUSH string "started" ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { { PUSH string "frozen" ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            COMPARE ;
                            EQ } } ;
                     IF { {} }
                        { { PUSH string
                                 "WrongCondition: (self.data.status == 'started') | (self.data.status == 'frozen')" ;
                            FAILWITH } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { {} }
                        { { PUSH string "WrongCondition: sp.sender == self.data.creator" ; FAILWITH } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     PUSH string "ended" ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 } }
                 { IF_LEFT
                     { { PUSH string "started" ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: self.data.status == 'started'" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: sp.sender == self.data.creator" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PUSH string "frozen" ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } }
                     { { PUSH string "started" ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: self.data.status == 'started'" ; FAILWITH } } ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: self.data.nextPlayer == sp.sender" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SIZE ;
                         INT ;
                         PUSH int 1 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         EDIV ;
                         IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CDR } ;
                         INT ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { { PUSH string "Get-item:122" ; FAILWITH } } {} ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } } } ;
               NIL operation } }
           { IF_LEFT
               { { IF_LEFT
                     { { PUSH string "created" ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: self.data.status == 'created'" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         PUSH bool False ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: (self.data.playersSet.contains(sp.sender)) == False" ;
                                FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         SENDER ;
                         SOME ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SIZE ;
                         INT ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         PUSH bool True ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } }
                     { { PUSH string "frozen" ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: self.data.status == 'frozen'" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { {} }
                            { { PUSH string "WrongCondition: sp.sender == self.data.creator" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PUSH string "started" ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } } ;
                   NIL operation } }
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       IF { PUSH bool True }
                          { { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CDR ; CDR ; SENDER ; COMPARE ; EQ } } ;
                       IF { {} }
                          { { PUSH string
                                   "WrongCondition: (sp.sender == self.data.originator_address) | (sp.sender == self.data.creator)" ;
                              FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 2 ;
                       DROP 2 ;
                       NIL operation } }
                   { { PUSH string "created" ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: self.data.status == 'created'" ; FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: sp.sender == self.data.originator_address" ;
                              FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR ;
                       PUSH string "started" ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       SIZE ;
                       INT ;
                       PUSH int 1 ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       ADD ;
                       EDIV ;
                       IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CDR } ;
                       INT ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CAR ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       GET ;
                       IF_NONE { { PUSH string "Get-item:122" ; FAILWITH } } {} ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       NIL operation ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       ITER { SWAP ;
                              DUP ;
                              DUG 2 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              CONTRACT %mint (pair (address %to) (int %value)) ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                              PUSH mutez 0 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              PAIR %to %value ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DUG 2 ;
                              DROP 2 } ;
                       SWAP ;
                       DROP } } } } ;
         PAIR } }
