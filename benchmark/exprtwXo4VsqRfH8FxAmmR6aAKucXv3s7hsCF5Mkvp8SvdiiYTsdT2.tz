{ parameter
    (or (pair %launchExchange address address)
        (pair %tokenToExchangeLookup (pair address address) nat)) ;
  storage
    (pair (pair (big_map %exchangeToToken address address) (set %tokenList address))
          (big_map %tokenToExchange address address)) ;
  code { DUP ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DUP ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MEM ;
             IF { PUSH string "Exchange launched" ; FAILWITH } { PUSH unit Unit } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH unit Unit } { PUSH string "Exchange launched" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PUSH bool True ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             DIP { DROP 8 } ;
             NIL operation ;
             PAIR ;
             DIP { DROP } }
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             CONTRACT %use
               (pair nat
                     (or (or (or (or (pair %divestLiquidity (pair nat nat) nat) (nat %initializeExchange))
                                 (or (nat %investLiquidity) (pair %setVotesDelegation address bool)))
                             (or (or (pair %tezToTokenPayment nat address)
                                     (pair %tokenToTezPayment (pair nat nat) address))
                                 (or (pair %tokenToTokenPayment (pair nat nat) (pair address address)) (address %veto))))
                         (pair %vote address key_hash))) ;
             IF_NONE { PUSH string "01" ; FAILWITH } { DUP ; DIP { DROP } } ;
             AMOUNT ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             PAIR ;
             LEFT (pair (pair nat nat) address) ;
             LEFT (or (pair (pair nat nat) (pair address address)) address) ;
             RIGHT (or (or (pair (pair nat nat) nat) nat) (or nat (pair address bool))) ;
             LEFT (pair address key_hash) ;
             PUSH nat 1 ;
             PAIR ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DROP } ;
             PAIR ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
