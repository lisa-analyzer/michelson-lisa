{ parameter
    (or (or (pair %configure (bool %isActive) (pair (mutez %serviceFee) (nat %serviceInterval)))
            (unit %deposit))
        (or (option %setDelegate key_hash) (or (address %setManager) (unit %withdraw)))) ;
  storage
    (pair (pair (address %admin) (bool %isActive))
          (pair (big_map %registry address timestamp)
                (pair (mutez %serviceFee) (nat %serviceInterval)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CAR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CAR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 DROP 2 }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CDR } ;
                 IF {} { PUSH string "Registry is not active" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "Minimum service fee not met" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 AMOUNT ;
                 EDIV ;
                 { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      NOW ;
                      PUSH int 60 ;
                      DUP ;
                      PUSH int 24 ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      { CDR ; CDR ; CDR } ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      { CDR ; CDR ; CAR } ;
                      AMOUNT ;
                      EDIV ;
                      { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                      CAR ;
                      MUL ;
                      INT ;
                      MUL ;
                      MUL ;
                      MUL ;
                      ADD ;
                      SOME ;
                      SENDER ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      DROP }
                    {} ;
                 DROP } ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                 DUP ;
                 NIL operation ;
                 SWAP ;
                 SET_DELEGATE ;
                 CONS ;
                 SWAP ;
                 DROP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT unit ;
                     { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                     BALANCE ;
                     PUSH unit Unit ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP } } } ;
         PAIR } }
