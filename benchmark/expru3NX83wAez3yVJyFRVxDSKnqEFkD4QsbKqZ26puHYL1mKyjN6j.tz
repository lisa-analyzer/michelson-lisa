{ parameter
    (or (or (mutez %collateralize)
            (or (option %delegate key_hash) (pair %deposit (int %duration) (nat %rate))))
        (or (pair %setOffer (int %duration) (nat %rate))
            (or (mutez %uncollateralize) (unit %withdraw)))) ;
  storage
    (pair (pair (address %admin) (mutez %collateral))
          (pair (int %duration)
                (pair (map %ledger address (pair (mutez %amount) (timestamp %due))) (nat %rate)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CAR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 { CAR ; CDR } ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 DROP 2 ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "WrongCondition: sp.amount == sp.tez(0)" ; FAILWITH } ;
                     DUP ;
                     NIL operation ;
                     SWAP ;
                     SET_DELEGATE ;
                     CONS ;
                     SWAP ;
                     DROP }
                   { DUP ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CDR ; CDR ; CDR } ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.rate >= params.rate" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CDR ; CAR } ;
                     COMPARE ;
                     LE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.duration <= params.duration" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     SENDER ;
                     MEM ;
                     IF { PUSH string "WrongCondition: ~ (self.data.ledger.contains(sp.sender))" ;
                          FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     PUSH nat 10000 ;
                     AMOUNT ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     { CDR ; CDR ; CDR } ;
                     MUL ;
                     EDIV ;
                     { IF_NONE { PUSH string "split_tokens" ; FAILWITH } {} } ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     { CAR ; CDR } ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CDR } ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.collateral >= sp.tez(0)" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     NOW ;
                     PUSH int 3600 ;
                     PUSH int 24 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     { CDR ; CAR } ;
                     MUL ;
                     MUL ;
                     ADD ;
                     PUSH nat 10000 ;
                     AMOUNT ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     { CDR ; CDR ; CDR } ;
                     MUL ;
                     EDIV ;
                     { IF_NONE { PUSH string "split_tokens" ; FAILWITH } {} } ;
                     CAR ;
                     AMOUNT ;
                     ADD ;
                     PAIR %amount %due ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 ;
                     NIL operation } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 DROP 2 ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     { CAR ; CDR } ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CDR } ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.collateral >= sp.tez(0)" ; FAILWITH } ;
                     DROP ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     SENDER ;
                     GET ;
                     { IF_NONE { PUSH string "Get-item:-1" ; FAILWITH } {} } ;
                     CDR ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string "WrongCondition: sp.now >= self.data.ledger[sp.sender].due" ;
                          FAILWITH } ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT unit ;
                     { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     { CDR ; CDR ; CAR } ;
                     SENDER ;
                     GET ;
                     { IF_NONE { PUSH string "Get-item:-1" ; FAILWITH } {} } ;
                     CAR ;
                     PUSH unit Unit ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     NONE (pair (mutez %amount) (timestamp %due)) ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DROP } } } ;
         PAIR } }
