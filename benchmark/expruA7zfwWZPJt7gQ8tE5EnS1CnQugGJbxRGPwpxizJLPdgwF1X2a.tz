{ storage
    (pair (pair (address %admin)
                (map %assets
                   nat
                   (pair (pair (int %assetId) (string %assetType))
                         (pair (int %featureCost) (pair (nat %price) (list %rentRates int))))))
          (pair (address %gameContract)
                (pair (map %ownership nat address) (map %portfolio address (set nat))))) ;
  parameter (or (pair %buy (nat %assetId) (address %buyer)) (address %setGameContract)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               MEM ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.assets.contains(params.assetId)" ;
                      FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               MEM ;
               IF { { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      MEM ;
                      DROP ;
                      NIL operation ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      CONTRACT %transfer_amount (pair (address %from_) (pair (address %to) (nat %value))) ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      GET ;
                      IF_NONE { { PUSH string "Get-item:156" ; FAILWITH } } {} ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      GET ;
                      IF_NONE { { PUSH string "Get-item:156" ; FAILWITH } } {} ;
                      SOME ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PAIR %to %value ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      PAIR %from_ ;
                      TRANSFER_TOKENS ;
                      CONS } }
                  { { NIL operation ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      CONTRACT %pay_amount (pair (address %player) (int %value)) ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      GET ;
                      IF_NONE { { PUSH string "Get-item:156" ; FAILWITH } } {} ;
                      CDR ;
                      CDR ;
                      CAR ;
                      INT ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      PAIR %player %value ;
                      TRANSFER_TOKENS ;
                      CONS } } ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               CDR ;
               CAR ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               MEM ;
               IF { { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      MEM ;
                      DROP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      DIG 7 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CAR ;
                      GET ;
                      IF_NONE { { PUSH string "Get-item:156" ; FAILWITH } } {} ;
                      SOME ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
                      PUSH bool False ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      UPDATE ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 } }
                  { {} } ;
               DIG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CDR ;
               SOME ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CAR ;
               UPDATE ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               CDR ;
               CDR ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               MEM ;
               IF { {} }
                  { { DIG 2 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      PUSH (option (set nat)) (Some {}) ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 } } ;
               DIG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CDR ;
               DUP ;
               DUG 2 ;
               GET ;
               IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
               PUSH bool True ;
               DIG 8 ;
               CAR ;
               UPDATE ;
               SOME ;
               SWAP ;
               UPDATE ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP } }
           { { SWAP ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               CDR ;
               DIG 2 ;
               PAIR ;
               SWAP ;
               PAIR ;
               NIL operation } } ;
         PAIR } }
