{ storage
    (pair (pair (address %administrator) (option %euroTzMain address))
          (pair (option %euroTzManagement address) (bool %paused))) ;
  parameter
    (or (or (pair %burn
               (pair (address %address) (int %amount))
               (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                     (pair (address %eventSinkContractAddress) (int %totalSupply))))
            (pair %mint
               (pair (address %address) (int %amount))
               (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                     (pair (address %eventSinkContractAddress) (int %totalSupply)))))
        (or (address %setAdministrator) (address %setEuroTzMain))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   SOURCE ;
                   COMPARE ;
                   EQ ;
                   IF { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          SENDER ;
                          COMPARE ;
                          EQ } }
                      { PUSH bool False } ;
                   IF { {} } { { PUSH string "01" ; FAILWITH } } ;
                   DUP ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CAR ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:109" ; FAILWITH } } {} ;
                   CDR ;
                   COMPARE ;
                   GE ;
                   IF { {} } { { PUSH string "09" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CAR ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   CAR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CAR ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   DIG 7 ;
                   DUP ;
                   DUG 8 ;
                   CAR ;
                   CAR ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:109" ; FAILWITH } } {} ;
                   CDR ;
                   SUB ;
                   SWAP ;
                   PAIR ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   SUB ;
                   SWAP ;
                   DROP ;
                   NIL operation ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CDR ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   CONTRACT %receiveDataAfterFaucetInv
                     (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                           (int %totalSupply)) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   PUSH mutez 0 ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   PAIR %balances %totalSupply ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CONTRACT %transferEvent
                     (pair (int %amount) (pair (option %fromAddress address) (option %toAddress address))) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   PUSH mutez 0 ;
                   NONE address ;
                   DIG 7 ;
                   DUP ;
                   DUG 8 ;
                   CAR ;
                   CAR ;
                   SOME ;
                   PAIR %fromAddress %toAddress ;
                   DIG 7 ;
                   DUP ;
                   DUG 8 ;
                   CAR ;
                   CDR ;
                   PAIR %amount ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   SOURCE ;
                   COMPARE ;
                   EQ ;
                   IF { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                          SENDER ;
                          COMPARE ;
                          EQ } }
                      { PUSH bool False } ;
                   IF { {} } { { PUSH string "01" ; FAILWITH } } ;
                   DUP ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CAR ;
                   MEM ;
                   IF { {} }
                      { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          UPDATE ;
                          DUG 2 ;
                          SWAP ;
                          DROP } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CAR ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   CAR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CAR ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   DIG 7 ;
                   DUP ;
                   DUG 8 ;
                   CAR ;
                   CAR ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:86" ; FAILWITH } } {} ;
                   CDR ;
                   ADD ;
                   SWAP ;
                   PAIR ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   ADD ;
                   SWAP ;
                   DROP ;
                   NIL operation ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CDR ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   CONTRACT %receiveDataAfterFaucetInv
                     (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                           (int %totalSupply)) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   PUSH mutez 0 ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   PAIR %balances %totalSupply ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DUP ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CONTRACT %transferEvent
                     (pair (int %amount) (pair (option %fromAddress address) (option %toAddress address))) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   PUSH mutez 0 ;
                   DIG 6 ;
                   DUP ;
                   DUG 7 ;
                   CAR ;
                   CAR ;
                   SOME ;
                   NONE address ;
                   PAIR %fromAddress %toAddress ;
                   DIG 7 ;
                   DUP ;
                   DUG 8 ;
                   CAR ;
                   CDR ;
                   PAIR %amount ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP } } }
           { { IF_LEFT
                 { { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     EQ ;
                     IF { { SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                            SENDER ;
                            COMPARE ;
                            EQ } }
                        { PUSH bool False } ;
                     IF { {} } { { PUSH string "01" ; FAILWITH } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 } }
                 { { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SOME ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 } } ;
               NIL operation } } ;
         PAIR } }
