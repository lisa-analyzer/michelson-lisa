{ parameter
    (or (pair %setRecord
           (bytes %label)
           (pair (bytes %parent)
                 (pair %record
                    (address %owner)
                    (option %resolver (or (address %address) (address %nametable))))))
        (address %setValidator)) ;
  storage
    (pair (big_map %records
             bytes
             (pair (address %owner) (option %resolver (or (address %address) (address %nametable)))))
          (address %validator)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CAR ;
               MEM ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.records.contains(params.parent)" ;
                      FAILWITH } } ;
               SENDER ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               CAR ;
               GET ;
               IF_NONE { { PUSH string "Get-item:38" ; FAILWITH } } {} ;
               CAR ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.records[params.parent].owner == sp.sender" ;
                      FAILWITH } } ;
               NIL operation ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               CONTRACT %validate bytes ;
               IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
               PUSH mutez 0 ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CAR ;
               TRANSFER_TOKENS ;
               CONS ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               PUSH bytes 0x ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CDR ;
               CAR ;
               COMPARE ;
               NEQ ;
               IF { { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      PUSH bytes 0x2e ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CONCAT ;
                      CONCAT ;
                      SWAP ;
                      DROP } }
                  { {} } ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DIG 4 ;
               DUP ;
               DUG 5 ;
               CDR ;
               CDR ;
               SOME ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               UPDATE ;
               PAIR ;
               DUG 4 ;
               DROP ;
               DIG 2 ;
               DROP ;
               SWAP ;
               DROP } }
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               DROP 2 ;
               NIL operation } } ;
         PAIR } }
