{ parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id))))))
            (contract %token_metadata_registry address))
        (or (list %transfer
               (pair (pair (nat %amount) (address %from_)) (pair (address %to_) (nat %token_id))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator))
                   (pair %remove_operator (address %owner) (address %operator)))))) ;
  storage
    (pair (big_map %ledger address (pair (set %allowances address) (nat %balance)))
          (big_map %token_metadata
             nat
             (pair (pair (pair (nat %decimals) (map %extras string string))
                         (pair (string %name) (string %symbol)))
                   (nat %token_id)))) ;
  code { LAMBDA
           (pair (pair (pair (big_map address (pair (set address) nat))
                             (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))
                       (pair address address))
                 bool)
           (pair (big_map address (pair (set address) nat))
                 (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))
           { DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             DUP ;
             CDR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Only owner can update operators" ; FAILWITH }
                { PUSH unit Unit } ;
             DROP ;
             PUSH unit Unit ;
             PUSH nat 0 ;
             EMPTY_SET address ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             GET ;
             IF_NONE
               { DUP }
               { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
             DUP ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CDR ;
             IF { DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CAR ;
                  PUSH bool True ;
                  SWAP ;
                  UPDATE ;
                  DIP { DROP } }
                { DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CAR ;
                  PUSH bool False ;
                  SWAP ;
                  UPDATE ;
                  DIP { DROP } } ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             DIP { DROP 8 } } ;
         LAMBDA
           (pair (pair nat address)
                 (pair (big_map address (pair (set address) nat))
                       (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
           nat
           { PUSH nat 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { PUSH unit Unit } ;
             PUSH nat 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             GET ;
             PAIR ;
             DUP ;
             CAR ;
             IF_NONE { DUP ; CDR } { DUP ; CDR ; DIP { DROP } } ;
             DIP { DROP 3 } } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 NIL (pair nat (pair address nat)) ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DUP ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CAR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CDR ;
                        PAIR ;
                        PAIR ;
                        DIG 12 ;
                        DUP ;
                        DUG 13 ;
                        SWAP ;
                        EXEC ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CAR ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        PAIR ;
                        CONS ;
                        PAIR ;
                        DIP { DROP 5 } } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 TRANSFER_TOKENS ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 7 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 PUSH mutez 0 ;
                 SELF ;
                 ADDRESS ;
                 TRANSFER_TOKENS ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CAR ;
                        CDR ;
                        PAIR ;
                        PAIR ;
                        PUSH bool False ;
                        SOURCE ;
                        SENDER ;
                        COMPARE ;
                        NEQ ;
                        IF { DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                             DUP ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             IF { DIG 1 ; DUP ; DUG 2 ; DROP ; PUSH bool True }
                                { DIG 1 ; DUP ; DUG 2 ; DROP ; PUSH bool False } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DROP 3 } }
                           { PUSH bool True } ;
                        DUP ;
                        DIP { DROP 3 } ;
                        DUP ;
                        IF { PUSH unit Unit }
                           { PUSH string "Sender not allowed to spend token from source" ; FAILWITH } ;
                        PUSH nat 0 ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        NEQ ;
                        IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { PUSH unit Unit } ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CAR ;
                        CDR ;
                        DIG 5 ;
                        DUP ;
                        DUG 6 ;
                        CDR ;
                        CDR ;
                        PAIR ;
                        PAIR ;
                        DIG 11 ;
                        DUP ;
                        DUG 12 ;
                        SWAP ;
                        EXEC ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CAR ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        COMPARE ;
                        LT ;
                        IF { PUSH string "Insufficient balance" ; FAILWITH } { PUSH unit Unit } ;
                        PUSH nat 0 ;
                        EMPTY_SET address ;
                        PAIR ;
                        DIG 7 ;
                        DUP ;
                        DUG 8 ;
                        CAR ;
                        DIG 7 ;
                        DUP ;
                        DUG 8 ;
                        CAR ;
                        CDR ;
                        GET ;
                        IF_NONE
                          { PUSH string "No sender balance" ; FAILWITH }
                          { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
                        DUP ;
                        DIG 8 ;
                        DUP ;
                        DUG 9 ;
                        CAR ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        SUB ;
                        ABS ;
                        SWAP ;
                        CAR ;
                        PAIR ;
                        DIG 9 ;
                        DUP ;
                        DUG 10 ;
                        DIG 10 ;
                        DUP ;
                        DUG 11 ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        DIG 11 ;
                        DUP ;
                        DUG 12 ;
                        CAR ;
                        CDR ;
                        SWAP ;
                        SOME ;
                        SWAP ;
                        UPDATE ;
                        SWAP ;
                        CDR ;
                        SWAP ;
                        PAIR ;
                        PUSH nat 0 ;
                        EMPTY_SET address ;
                        PAIR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 11 ;
                        DUP ;
                        DUG 12 ;
                        CDR ;
                        CAR ;
                        GET ;
                        IF_NONE
                          { DUP }
                          { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
                        DUP ;
                        DIG 12 ;
                        DUP ;
                        DUG 13 ;
                        CAR ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        ADD ;
                        SWAP ;
                        CAR ;
                        PAIR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        DIG 15 ;
                        DUP ;
                        DUG 16 ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        SOME ;
                        SWAP ;
                        UPDATE ;
                        SWAP ;
                        CDR ;
                        SWAP ;
                        PAIR ;
                        DIP { DROP 15 } } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        IF_LEFT
                          { DUP ; LEFT (pair (address %owner) (address %operator)) ; DIP { DROP } }
                          { DUP ; RIGHT (pair (address %owner) (address %operator)) ; DIP { DROP } } ;
                        DUP ;
                        IF_LEFT
                          { PUSH bool True ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            PAIR ;
                            PAIR ;
                            DIG 10 ;
                            DUP ;
                            DUG 11 ;
                            SWAP ;
                            EXEC ;
                            DIP { DROP } }
                          { PUSH bool False ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            PAIR ;
                            PAIR ;
                            DIG 10 ;
                            DUP ;
                            DUG 11 ;
                            SWAP ;
                            EXEC ;
                            DIP { DROP } } ;
                        DUP ;
                        DIP { DROP 4 } } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } } ;
         DIP { DROP 4 } } }
