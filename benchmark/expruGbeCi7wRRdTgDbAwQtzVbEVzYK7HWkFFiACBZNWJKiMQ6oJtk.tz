{ parameter
    (or (or (pair %addCreditor (pair (address %0) (nat %1)) (pair (int %2) (nat %3)))
            (unit %checkPoint))
        (or (int %modifyCapital)
            (pair %modifyOwnership (pair (address %0) (timestamp %1)) (nat %2)))) ;
  storage
    (pair (pair (pair (int %capitalInplace) (mutez %couponRate))
                (pair (map %creditorsMap
                         address
                         (pair (pair (pair (nat %creditAmount) (timestamp %initialTime))
                                     (pair (bool %is_final) (timestamp %maturityTime)))
                               (nat %paybackAmount)))
                      (address %debtor)))
          (int %totalCredits)) ;
  code { DUP ;
         NIL address ;
         SWAP ;
         CDR ;
         PUSH address "tz1NBWgCxEGy8U6UA4hRmemt3YmMXbPPe1YH" ;
         CONTRACT unit ;
         IF_NONE
           { PUSH string "Not a contract" ; FAILWITH }
           { DUP ; DIP { DROP } } ;
         DUP ;
         AMOUNT ;
         UNIT ;
         TRANSFER_TOKENS ;
         DUP ;
         NIL operation ;
         SWAP ;
         CONS ;
         DIP 5 { DUP } ;
         DIG 5 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIP { DUP ; CAR ; CDR } ;
                 PAIR ;
                 DIP { DUP ; CDR ; CAR ; DIP { DUP ; CDR ; CDR } ; PAIR } ;
                 PAIR ;
                 DIP { DIP 6 { DUP } ; DIG 6 } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only debtor can modify the capital" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIP { DIP 5 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "Creditor contract does not exist" ; FAILWITH }
                    { DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP 6 { DUP } ;
                      DIG 6 ;
                      DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CAR } ;
                      GET ;
                      IF_NONE
                        { NOW ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          DIP { DUP } ;
                          PAIR ;
                          DIP { DUP ;
                                DIP { DIP 8 { DUP } ; DIG 8 ; CAR ; CDR ; CAR ; PUSH int 86400 ; MUL } ;
                                ADD ;
                                PUSH bool True ;
                                PAIR } ;
                          PAIR ;
                          DIP { DIP 8 { DUP } ; DIG 8 ; CAR ; CDR ; CDR } ;
                          PAIR ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          DIP 9 { DUP } ;
                          DIG 9 ;
                          DIP { DIP { DUP } ;
                                SWAP ;
                                SOME ;
                                DIP { DIP 7 { DUP } ; DIG 7 ; CAR ; CDR ; CAR } } ;
                          UPDATE ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          DIP { DUP } ;
                          SWAP ;
                          CDR ;
                          DIP { DIP 9 { DUP } ; DIG 9 } ;
                          ADD ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP { DROP ; DUP } ;
                          SWAP ;
                          DIP { DROP 5 } }
                        { PUSH string "Creditor contract does not reach maturity" ; FAILWITH } ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP { DROP 3 } } ;
                 DUP ;
                 DIP { DROP 8 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 2 } }
               { DIP 5 { DUP } ;
                 DIG 5 ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only debtor can call" ; FAILWITH } { PUSH unit Unit } ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIP { DIP 9 { DUP } ; DIG 9 } ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DUP ;
                        CDR ;
                        CAR ;
                        CDR ;
                        CDR ;
                        NOW ;
                        SWAP ;
                        COMPARE ;
                        LE ;
                        IF { DUP ; CAR ; DIP { DIP { DUP } ; SWAP } ; CONS }
                           { DIP { DUP } ; SWAP } ;
                        DIP { DROP 3 } } ;
                 NIL operation ;
                 DUP ;
                 DIP { DIP 4 { DUP } ; DIG 4 } ;
                 PAIR ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 SIZE ;
                 PUSH nat 0 ;
                 SWAP ;
                 COMPARE ;
                 EQ ;
                 IF { DUP }
                    { NIL operation ;
                      DIP 6 { DUP } ;
                      DIG 6 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIP { DUP } ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DIP { DUP } ;
                             SWAP ;
                             CAR ;
                             DIP { DUP } ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             CDR ;
                             NOW ;
                             SWAP ;
                             COMPARE ;
                             LE ;
                             IF { DIP 2 { DUP } ;
                                  DIG 2 ;
                                  CDR ;
                                  CAR ;
                                  DIP { DIP { DUP } ; SWAP ; CDR } ;
                                  PAIR ;
                                  PUSH address "KT1DdshqQRd8MSK4P57fyMtjQBuL6fVTpmgP" ;
                                  CONTRACT
                                    (or (pair %approve (address %0) (nat %1))
                                        (pair %transfer (pair (address %0) (address %1)) (nat %2))) ;
                                  IF_NONE
                                    { PUSH string "Contract not found." ; FAILWITH }
                                    { DUP ; DIP { DROP } } ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  CAR ;
                                  DIP { DIP { DUP } ; SWAP ; CDR } ;
                                  PAIR ;
                                  LEFT (pair (pair (address %0) (address %1)) (nat %2)) ;
                                  DUP ;
                                  DIP { DIP { DUP } ; SWAP ; PUSH mutez 0 } ;
                                  TRANSFER_TOKENS ;
                                  DUP ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS ;
                                  DUP ;
                                  DIP { DROP 5 ; DUP } ;
                                  SWAP ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  DIP { DROP 2 } }
                                { DUP } ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             CAR ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             DIP { DROP ; CDR } ;
                             PAIR ;
                             CAR ;
                             DIP { DROP 4 } } ;
                      DUP ;
                      DIP { DROP 2 } ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP { DIP 6 { DUP } ; DIG 6 } ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DIP { DUP } ;
                             SWAP ;
                             CDR ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIP { DIP { DUP } ; SWAP } ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH string "Creditor contract does not exist" ; FAILWITH }
                                { DIP 2 { DUP } ;
                                  DIG 2 ;
                                  DIP 2 { DUP } ;
                                  DIG 2 ;
                                  DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CDR ; CAR } ;
                                  GET ;
                                  IF_NONE
                                    { PUSH string "Creditor contract does not exist" ; FAILWITH }
                                    { DIP 4 { DUP } ;
                                      DIG 4 ;
                                      DIP { DUP } ;
                                      SWAP ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PUSH bool True ;
                                      SWAP ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIP 5 { DUP } ;
                                           DIG 5 ;
                                           CDR ;
                                           DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CAR } ;
                                           SUB ;
                                           DUP ;
                                           PUSH int 0 ;
                                           SWAP ;
                                           COMPARE ;
                                           LT ;
                                           IF { PUSH string "totalCredits cannot be less than zero." ; FAILWITH }
                                              { PUSH unit Unit } ;
                                           DIP 2 { DUP } ;
                                           DIG 2 ;
                                           DIP 8 { DUP } ;
                                           DIG 8 ;
                                           DIP 3 { DUP } ;
                                           DIG 3 ;
                                           SWAP ;
                                           CAR ;
                                           PAIR ;
                                           DIP { DROP 3 } }
                                         { DUP } ;
                                      DUP ;
                                      DUP ;
                                      DIP 7 { DUP } ;
                                      DIG 7 ;
                                      DIP { DIP { DUP } ;
                                            SWAP ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            NONE (pair (pair (pair (nat %creditAmount) (timestamp %initialTime))
                                                             (pair (bool %is_final) (timestamp %maturityTime)))
                                                       (nat %paybackAmount)) } ;
                                      UPDATE ;
                                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DIP 5 { DUP } ;
                                      DIG 5 ;
                                      DIP 2 { DUP } ;
                                      DIG 2 ;
                                      DIP { DROP ; DUP } ;
                                      SWAP ;
                                      DIP { DROP 6 } } ;
                                  DIP 2 { DUP } ;
                                  DIG 2 ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  DIP { DROP 3 } } ;
                             DUP ;
                             DIP { DROP 5 } } ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      CAR ;
                      DIP { DUP } ;
                      PAIR ;
                      DIP { DROP 2 } } ;
                 DUP ;
                 CAR ;
                 DIP { DUP ; CDR } ;
                 PAIR ;
                 DIP { DROP 8 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 DIP { DIP 5 { DUP } ; DIG 5 } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only debtor can modify the capital" ; FAILWITH }
                    { DUP ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP 5 { DUP } ;
                      DIG 5 ;
                      CAR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP } } ;
                 DUP ;
                 DIP { DROP 5 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } }
               { DUP ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DUP ;
                       CAR ;
                       CAR ;
                       DIP { DUP ; CAR ; CDR } ;
                       PAIR ;
                       DIP { DUP ; CDR ; DIP { DIP 6 { DUP } ; DIG 6 } ; PAIR } ;
                       PAIR ;
                       DUP ;
                       CAR ;
                       CAR ;
                       DIP { DUP } ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       DIP 2 { DUP } ;
                       DIG 2 ;
                       CDR ;
                       CAR ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       CDR ;
                       CDR ;
                       PUSH mutez 3000000 ;
                       AMOUNT ;
                       COMPARE ;
                       NEQ ;
                       IF { PUSH string "Please pay exactly 3 tezos to change the ownership" ;
                            FAILWITH }
                          { PUSH unit Unit } ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP { PUSH int 86400 ; NOW ; ADD } ;
                       COMPARE ;
                       LE ;
                       IF { PUSH string "needs to be at least one day later" ; FAILWITH }
                          { PUSH unit Unit } ;
                       DIP 5 { DUP } ;
                       DIG 5 ;
                       DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CDR ; CAR } ;
                       GET ;
                       IF_NONE
                         { PUSH unit Unit }
                         { PUSH string "new owner has already been on the list" ; FAILWITH } ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP 4 { DUP } ;
                       DIG 4 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SENDER ;
                       GET ;
                       IF_NONE
                         { PUSH string "Creditor contract does not exist" ; FAILWITH }
                         { DIP 7 { DUP } ;
                           DIG 7 ;
                           PUSH int 86400 ;
                           ADD ;
                           DIP { DUP ; CAR ; CDR ; CDR } ;
                           COMPARE ;
                           GT ;
                           IF { PUSH string "needs to be at least one day before maturity time" ; FAILWITH }
                              { PUSH unit Unit } ;
                           DIP { DUP } ;
                           SWAP ;
                           CDR ;
                           DIP { DIP 7 { DUP } ; DIG 7 } ;
                           SUB ;
                           ABS ;
                           DIP 2 { DUP } ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           DIP 8 { DUP } ;
                           DIG 8 ;
                           DIP 12 { DUP } ;
                           DIG 12 ;
                           DIP { DIP { DUP } ;
                                 SWAP ;
                                 DIP { DIP 11 { DUP } ; DIG 11 } ;
                                 PAIR ;
                                 DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CDR ; PUSH bool True ; PAIR } ;
                                 PAIR ;
                                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                                 PAIR ;
                                 SOME ;
                                 DIP { DIP 9 { DUP } ; DIG 9 ; CAR ; CDR ; CAR } } ;
                           UPDATE ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DUP ;
                           DIP { DUP } ;
                           SWAP ;
                           CAR ;
                           CDR ;
                           CAR ;
                           NONE (pair (pair (pair (nat %creditAmount) (timestamp %initialTime))
                                            (pair (bool %is_final) (timestamp %maturityTime)))
                                      (nat %paybackAmount)) ;
                           SENDER ;
                           UPDATE ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP 6 { DUP } ;
                           DIG 6 ;
                           DIP 2 { DUP } ;
                           DIG 2 ;
                           DIP { DROP ; DUP } ;
                           SWAP ;
                           DIP { DROP ; DUP } ;
                           SWAP ;
                           DIP 4 { DUP } ;
                           DIG 4 ;
                           DIP { DIP 7 { DUP } ; DIG 7 ; CAR ; CAR ; CDR } ;
                           PAIR ;
                           DIP { DIP 14 { DUP } ; DIG 14 ; PUSH bool False ; PAIR } ;
                           PAIR ;
                           DIP { DIP 13 { DUP } ; DIG 13 } ;
                           PAIR ;
                           SOME ;
                           DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CDR ; CAR } ;
                           SENDER ;
                           UPDATE ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP { DROP 7 } } ;
                       DUP ;
                       DIP { DROP 10 } } ;
                 PAIR ;
                 DIP { DROP 2 } } ;
             DIP { DROP } } ;
         DIP { DROP 6 } } }
