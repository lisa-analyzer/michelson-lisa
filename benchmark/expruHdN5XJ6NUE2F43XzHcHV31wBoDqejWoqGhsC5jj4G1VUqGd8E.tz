{ storage
    (pair (pair (pair (pair (big_map %contributions address mutez) (timestamp %maxTime))
                      (mutez %minAmount))
                (address %owner))
          (mutez %total)) ;
  parameter (or (or (unit %payOff) (unit %refund)) (unit %sendFund)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   NOW ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.now >= self.data.maxTime" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.total >= self.data.minAmount" ;
                          FAILWITH } } ;
                   NIL operation ;
                   SENDER ;
                   CONTRACT unit ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CDR ;
                   PUSH unit Unit ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   SWAP ;
                   DROP } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   NOW ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.now >= self.data.maxTime" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   MEM ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.contributions.contains(sp.sender)" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   COMPARE ;
                   LT ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.total < self.data.minAmount" ;
                          FAILWITH } } ;
                   NIL operation ;
                   SENDER ;
                   CONTRACT unit ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:-1" ; FAILWITH } } {} ;
                   PUSH unit Unit ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   NONE mutez ;
                   SENDER ;
                   UPDATE ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DUG 3 ;
                   DIG 2 ;
                   DROP ;
                   SWAP ;
                   DROP } } }
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CAR ;
               CAR ;
               SENDER ;
               MEM ;
               IF { { PUSH string "WrongCondition: ~ (self.data.contributions.contains(sp.sender))" ;
                      FAILWITH } }
                  { {} } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CAR ;
               CDR ;
               NOW ;
               COMPARE ;
               LT ;
               IF { {} }
                  { { PUSH string "WrongCondition: sp.now < self.data.maxTime" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               AMOUNT ;
               SOME ;
               SENDER ;
               UPDATE ;
               PAIR ;
               PAIR ;
               PAIR ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               AMOUNT ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CDR ;
               ADD ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               DROP ;
               DROP ;
               NIL operation } } ;
         PAIR } }
