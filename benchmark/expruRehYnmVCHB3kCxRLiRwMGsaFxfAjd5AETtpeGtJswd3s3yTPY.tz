{ parameter
    (or (pair %launchExchange address address)
        (pair %tokenToExchangeLookup (pair address address) nat)) ;
  storage
    (pair (pair (big_map %exchangeToToken address address) (list %tokenList address))
          (big_map %tokenToExchange address address)) ;
  code { DUP ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DUP ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH unit Unit } { PUSH string "Exchange launched" ; FAILWITH } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH unit Unit } { PUSH string "Exchange launched" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CONS ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR ;
             DIP { DROP 9 } }
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             CONTRACT
               (or (or (or (or (pair %divestLiquidity (pair nat nat) nat)
                               (pair %initializeExchange nat key_hash))
                           (or (pair %investLiquidity nat key_hash) (pair %tezToTokenPayment nat address)))
                       (or (or (nat %tezToTokenSwap) (pair %tokenToTezPayment (pair nat nat) address))
                           (or (pair %tokenToTezSwap nat nat)
                               (pair %tokenToTokenPayment (pair nat nat) (pair address address)))))
                   (pair %tokenToTokenSwap (pair nat nat) address)) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             AMOUNT ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             CAR ;
             PAIR ;
             RIGHT (pair nat key_hash) ;
             RIGHT (or (pair (pair nat nat) nat) (pair nat key_hash)) ;
             LEFT (or (or nat (pair (pair nat nat) address))
                      (or (pair nat nat) (pair (pair nat nat) (pair address address)))) ;
             LEFT (pair (pair nat nat) address) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 3 } } }
