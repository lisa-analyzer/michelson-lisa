{ storage
    (pair (pair (pair (address %administrator) (nat %all_tokens))
                (pair (nat %highestTokenIndex) (big_map %ledger (pair address nat) nat)))
          (pair (pair (unit %metadata_string)
                      (big_map %operators (pair (address %owner) (address %operator)) unit))
                (pair (bool %paused)
                      (big_map %tokens
                         nat
                         (pair (pair %metadata
                                  (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string int)))))
                               (nat %total_supply)))))) ;
  parameter
    (or (or (or (pair %balance_of
                   (contract %callback
                      (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
                   (list %requests (pair (address %owner) (nat %token_id))))
                (or (int %create_certificate)
                    (pair %is_operator
                       (contract %callback
                          (pair (bool %is_operator) (pair %operator (address %owner) (address %operator))))
                       (pair %operator (address %owner) (address %operator)))))
            (or (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (string %symbol) (nat %token_id)))
                (or (contract %permissions_descriptor
                       (pair (or %operator
                                (unit %no_transfer)
                                (or (unit %owner_transfer) (unit %owner_or_operator_transfer)))
                             (pair (or %receiver
                                      (unit %owner_no_op)
                                      (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                                   (pair (or %sender
                                            (unit %owner_no_op)
                                            (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                                         (option %custom (pair (option %config_api address) (string %tag)))))))
                    (nat %redeem_certificate))))
        (or (or (address %set_administrator)
                (or (bool %set_pause)
                    (pair %token_metadata
                       (contract %callback
                          (list (pair (nat %token_id)
                                      (pair (string %symbol)
                                            (pair (string %name) (pair (nat %decimals) (map %extras string int)))))))
                       (list %token_ids nat))))
            (or (pair %total_supply
                   (contract %callback (list (pair (nat %token_id) (nat %total_supply))))
                   (list %token_ids nat))
                (or (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (address %operator))
                           (pair %remove_operator (address %owner) (address %operator)))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       IF { { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } }
                          { {} } ;
                       PUSH (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))) {} ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       ITER { DUP ;
                              DUG 2 ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              PAIR %owner %token_id ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              PAIR ;
                              GET ;
                              IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                              PAIR %balance %request ;
                              CONS } ;
                       NIL operation ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       NIL (pair (nat %balance) (pair %request (address %owner) (nat %token_id))) ;
                       SWAP ;
                       ITER { CONS } ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       TRANSFER_TOKENS ;
                       CONS } }
                   { IF_LEFT
                       { { DUP ;
                           PUSH int 25 ;
                           COMPARE ;
                           GT ;
                           IF { {} }
                              { { PUSH string "WrongCondition: params.months < 25" ; FAILWITH } } ;
                           PUSH int 1 ;
                           PUSH int 0 ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           LT ;
                           LOOP { SWAP ;
                                  PUSH int 10033 ;
                                  MUL ;
                                  SWAP ;
                                  PUSH int 1 ;
                                  ADD ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  LT } ;
                           PUSH int 1 ;
                           PUSH int 0 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           LT ;
                           LOOP { SWAP ;
                                  PUSH int 10000 ;
                                  MUL ;
                                  SWAP ;
                                  PUSH int 1 ;
                                  ADD ;
                                  DIG 4 ;
                                  DUP ;
                                  DUG 5 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  LT } ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DIG 6 ;
                           DUP ;
                           DUG 7 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           COMPARE ;
                           LT ;
                           IF { { PUSH string
                                       "WrongCondition: ~ (self.data.highestTokenIndex < self.data.all_tokens)" ;
                                  FAILWITH } }
                              { {} } ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           CAR ;
                           DIG 8 ;
                           DUP ;
                           DUG 9 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP ;
                           PUSH nat 1 ;
                           DIG 11 ;
                           DUP ;
                           DUG 12 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           ADD ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           LE ;
                           IF { DROP } { { SWAP ; DROP } } ;
                           DIG 9 ;
                           DROP ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DUG 5 ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DIG 6 ;
                           DUP ;
                           DUG 7 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           SENDER ;
                           PAIR ;
                           MEM ;
                           IF { { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  DIG 10 ;
                                  DUP ;
                                  DUG 11 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  SENDER ;
                                  PAIR ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                  DROP ;
                                  PUSH nat 1 ;
                                  DIG 11 ;
                                  DUP ;
                                  DUG 12 ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  DIG 12 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  SENDER ;
                                  PAIR ;
                                  GET ;
                                  IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                                  ADD ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DUG 5 } }
                              { { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  PUSH (option nat) (Some 1) ;
                                  DIG 10 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  SENDER ;
                                  PAIR ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DUG 5 } } ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DIG 6 ;
                           DUP ;
                           DUG 7 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           MEM ;
                           IF { { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  DIG 10 ;
                                  DUP ;
                                  DUG 11 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                  CAR ;
                                  PUSH nat 1 ;
                                  DIG 12 ;
                                  DUP ;
                                  DUG 13 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  DIG 13 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { { PUSH string "Get-item:632" ; FAILWITH } } {} ;
                                  CDR ;
                                  ADD ;
                                  SWAP ;
                                  PAIR ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DUG 5 } }
                              { { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  PUSH nat 1 ;
                                  PUSH (map string int) {} ;
                                  PUSH mutez 1 ;
                                  PUSH nat 100 ;
                                  AMOUNT ;
                                  PUSH nat 100 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                                  CAR ;
                                  EDIV ;
                                  IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                  CAR ;
                                  INT ;
                                  SOME ;
                                  PUSH string "value" ;
                                  UPDATE ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  ISNAT ;
                                  IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                  DIG 8 ;
                                  DUP ;
                                  DUG 9 ;
                                  DIG 11 ;
                                  DUP ;
                                  DUG 12 ;
                                  SUB ;
                                  PUSH mutez 1 ;
                                  PUSH nat 100 ;
                                  AMOUNT ;
                                  PUSH nat 100 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                                  CAR ;
                                  EDIV ;
                                  IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                  CAR ;
                                  INT ;
                                  MUL ;
                                  ISNAT ;
                                  IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                  EDIV ;
                                  IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CAR } ;
                                  INT ;
                                  SOME ;
                                  PUSH string "earlyUnlockFee" ;
                                  UPDATE ;
                                  PUSH timestamp "0" ;
                                  NOW ;
                                  PUSH int 60 ;
                                  DUP ;
                                  PUSH int 24 ;
                                  PUSH int 30 ;
                                  DIG 16 ;
                                  DUP ;
                                  DUG 17 ;
                                  MUL ;
                                  MUL ;
                                  MUL ;
                                  MUL ;
                                  ADD ;
                                  SUB ;
                                  SOME ;
                                  PUSH string "unlockTime" ;
                                  UPDATE ;
                                  PUSH nat 0 ;
                                  PAIR %decimals %extras ;
                                  PUSH string "" ;
                                  PAIR %name ;
                                  PUSH string "IOU" ;
                                  PAIR %symbol ;
                                  DIG 11 ;
                                  DUP ;
                                  DUG 12 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  PAIR %token_id ;
                                  PAIR %metadata %total_supply ;
                                  SOME ;
                                  DIG 10 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DUG 5 } } ;
                           DROP 5 ;
                           DUP ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           CDR ;
                           PUSH nat 1 ;
                           DIG 4 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           ADD ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           NIL operation } }
                       { { DUP ;
                           CAR ;
                           NIL operation ;
                           SWAP ;
                           PUSH mutez 0 ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CDR ;
                           CDR ;
                           DIG 6 ;
                           CDR ;
                           CAR ;
                           PAIR %owner %operator ;
                           MEM ;
                           PAIR %is_operator %operator ;
                           TRANSFER_TOKENS ;
                           CONS } } } }
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       DUP ;
                       PUSH nat 1 ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       CDR ;
                       CDR ;
                       ADD ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       LE ;
                       IF { DROP } { { SWAP ; DROP } } ;
                       DIG 5 ;
                       DROP ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       MEM ;
                       IF { { SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                              DROP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              DIG 7 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CDR ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              GET ;
                              IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                              ADD ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } }
                          { { SWAP ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              SOME ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       MEM ;
                       IF { { SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              DIG 8 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CDR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH string "Get-item:443" ; FAILWITH } } {} ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP } }
                          { { SWAP ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              PUSH (pair (string %name) (pair (nat %decimals) (map %extras string int)))
                                   (Pair "" (Pair 0 {})) ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              CAR ;
                              PAIR %symbol ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              CDR ;
                              PAIR %token_id ;
                              PAIR %metadata %total_supply ;
                              SOME ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP } } ;
                       DROP ;
                       DUP ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CDR ;
                       PUSH nat 1 ;
                       DIG 4 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       ADD ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       NIL operation } }
                   { IF_LEFT
                       { { NIL operation ;
                           SWAP ;
                           PUSH mutez 0 ;
                           PUSH (pair (or %operator
                                         (unit %no_transfer)
                                         (or (unit %owner_transfer) (unit %owner_or_operator_transfer)))
                                      (pair (or %receiver
                                               (unit %owner_no_op)
                                               (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                                            (pair (or %sender
                                                     (unit %owner_no_op)
                                                     (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                                                  (option %custom (pair (option %config_api address) (string %tag))))))
                                (Pair (Right (Right Unit)) (Pair (Left Unit) (Pair (Left Unit) None))) ;
                           TRANSFER_TOKENS ;
                           CONS } }
                       { { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           SENDER ;
                           PAIR ;
                           MEM ;
                           IF { {} }
                              { { PUSH string
                                       "WrongCondition: self.data.ledger.contains((sp.sender, params.token_id))" ;
                                  FAILWITH } } ;
                           PUSH int 0 ;
                           PUSH timestamp "0" ;
                           NOW ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:668" ; FAILWITH } } {} ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           PUSH string "unlockTime" ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:678" ; FAILWITH } } {} ;
                           NEG ;
                           ADD ;
                           SUB ;
                           COMPARE ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           SENDER ;
                           PAIR ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                           DROP ;
                           DIG 6 ;
                           DROP ;
                           PUSH (option nat) (Some 0) ;
                           SWAP ;
                           UPDATE ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           SWAP ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                           CAR ;
                           PUSH nat 0 ;
                           SWAP ;
                           PAIR ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           NIL operation ;
                           SENDER ;
                           CONTRACT unit ;
                           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                           PUSH mutez 1 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:668" ; FAILWITH } } {} ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           PUSH string "earlyUnlockFee" ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:680" ; FAILWITH } } {} ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DIG 5 ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:668" ; FAILWITH } } {} ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           PUSH string "value" ;
                           GET ;
                           IF_NONE { { PUSH string "Get-item:679" ; FAILWITH } } {} ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                           MUL ;
                           PUSH unit Unit ;
                           TRANSFER_TOKENS ;
                           CONS } } } } }
           { IF_LEFT
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       IF { {} }
                          { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } } ;
                       SWAP ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       DIG 3 ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       NIL operation } }
                   { IF_LEFT
                       { { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { {} }
                              { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } } ;
                           SWAP ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           CDR ;
                           DIG 3 ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           NIL operation } }
                       { { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           IF { { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } }
                              { {} } ;
                           PUSH (list (pair (nat %token_id)
                                            (pair (string %symbol)
                                                  (pair (string %name) (pair (nat %decimals) (map %extras string int))))))
                                {} ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           ITER { SWAP ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  DIG 2 ;
                                  GET ;
                                  IF_NONE { { PUSH string "Get-item:536" ; FAILWITH } } {} ;
                                  CAR ;
                                  CONS } ;
                           NIL operation ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           PUSH mutez 0 ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           NIL (pair (nat %token_id)
                                     (pair (string %symbol)
                                           (pair (string %name) (pair (nat %decimals) (map %extras string int))))) ;
                           SWAP ;
                           ITER { CONS } ;
                           DIG 4 ;
                           DROP ;
                           DIG 4 ;
                           DROP ;
                           TRANSFER_TOKENS ;
                           CONS } } } }
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       IF { { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } }
                          { {} } ;
                       PUSH (list (pair (nat %token_id) (nat %total_supply))) {} ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       ITER { SWAP ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { { PUSH string "Get-item:523" ; FAILWITH } } {} ;
                              CDR ;
                              DIG 2 ;
                              PAIR %token_id %total_supply ;
                              CONS } ;
                       NIL operation ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       NIL (pair (nat %token_id) (nat %total_supply)) ;
                       SWAP ;
                       ITER { CONS } ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       TRANSFER_TOKENS ;
                       CONS } }
                   { { IF_LEFT
                         { { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             IF { { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } }
                                { {} } ;
                             DUP ;
                             ITER { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { { DUP ; CAR ; SENDER ; COMPARE ; EQ } } ;
                                    IF { PUSH bool True }
                                       { { DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           SENDER ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           PAIR %owner %operator ;
                                           MEM } } ;
                                    IF { {} } { { PUSH string "NOT_OPERATOR" ; FAILWITH } } ;
                                    DUP ;
                                    CDR ;
                                    ITER { DUP ;
                                           CDR ;
                                           CDR ;
                                           PUSH nat 0 ;
                                           COMPARE ;
                                           LT ;
                                           IF { {} } { { PUSH string "TRANSFER_OF_ZERO" ; FAILWITH } } ;
                                           DUP ;
                                           CDR ;
                                           CDR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CAR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CAR ;
                                           PAIR ;
                                           GET ;
                                           IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                                           COMPARE ;
                                           GE ;
                                           IF { {} } { { PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH } } ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DUP ;
                                           CDR ;
                                           SWAP ;
                                           CAR ;
                                           DUP ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           DUP ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           DUP ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           CDR ;
                                           CAR ;
                                           DIG 7 ;
                                           DUP ;
                                           DUG 8 ;
                                           CAR ;
                                           PAIR ;
                                           DUP ;
                                           DUG 2 ;
                                           GET ;
                                           IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                           DROP ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           CDR ;
                                           CDR ;
                                           DIG 9 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DIG 7 ;
                                           DUP ;
                                           DUG 8 ;
                                           CDR ;
                                           CAR ;
                                           DIG 9 ;
                                           DUP ;
                                           DUG 10 ;
                                           CAR ;
                                           PAIR ;
                                           GET ;
                                           IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                                           SUB ;
                                           ISNAT ;
                                           IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           SWAP ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           PAIR ;
                                           DUG 3 ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           PAIR ;
                                           MEM ;
                                           IF { { DIG 3 ;
                                                  DUP ;
                                                  DUG 4 ;
                                                  DUP ;
                                                  CDR ;
                                                  SWAP ;
                                                  CAR ;
                                                  DUP ;
                                                  CAR ;
                                                  SWAP ;
                                                  CDR ;
                                                  DUP ;
                                                  CAR ;
                                                  SWAP ;
                                                  CDR ;
                                                  DUP ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  CDR ;
                                                  CAR ;
                                                  DIG 6 ;
                                                  DUP ;
                                                  DUG 7 ;
                                                  CAR ;
                                                  PAIR ;
                                                  DUP ;
                                                  DUG 2 ;
                                                  GET ;
                                                  IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                                  DROP ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  CDR ;
                                                  CDR ;
                                                  DIG 9 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  DIG 7 ;
                                                  DUP ;
                                                  DUG 8 ;
                                                  CDR ;
                                                  CAR ;
                                                  DIG 8 ;
                                                  DUP ;
                                                  DUG 9 ;
                                                  CAR ;
                                                  PAIR ;
                                                  GET ;
                                                  IF_NONE { { PUSH string "Get-item:197" ; FAILWITH } } {} ;
                                                  ADD ;
                                                  SOME ;
                                                  SWAP ;
                                                  UPDATE ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DUG 3 } }
                                              { { DIG 3 ;
                                                  DUP ;
                                                  CDR ;
                                                  SWAP ;
                                                  CAR ;
                                                  DUP ;
                                                  CAR ;
                                                  SWAP ;
                                                  CDR ;
                                                  DUP ;
                                                  CAR ;
                                                  SWAP ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  DUP ;
                                                  DUG 5 ;
                                                  CDR ;
                                                  CDR ;
                                                  SOME ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  CDR ;
                                                  CAR ;
                                                  DIG 6 ;
                                                  DUP ;
                                                  DUG 7 ;
                                                  CAR ;
                                                  PAIR ;
                                                  UPDATE ;
                                                  SWAP ;
                                                  PAIR ;
                                                  SWAP ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DUG 3 } } ;
                                           DROP } ;
                                    DROP } ;
                             DROP } }
                         { { DUP ;
                             ITER { DUP ;
                                    IF_LEFT
                                      { { DROP ;
                                          DUP ;
                                          SENDER ;
                                          SWAP ;
                                          IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                          CAR ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH bool True }
                                             { { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } } ;
                                          IF { {} }
                                             { { PUSH string
                                                      "WrongCondition: (update.open_variant('add_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                 FAILWITH } } ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          DUP ;
                                          CAR ;
                                          SWAP ;
                                          CDR ;
                                          DUP ;
                                          CDR ;
                                          SWAP ;
                                          CAR ;
                                          DUP ;
                                          CAR ;
                                          SWAP ;
                                          CDR ;
                                          PUSH (option unit) (Some Unit) ;
                                          DIG 5 ;
                                          DUP ;
                                          DUG 6 ;
                                          IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                          CDR ;
                                          DIG 6 ;
                                          DUP ;
                                          DUG 7 ;
                                          IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                          DIG 9 ;
                                          DROP ;
                                          CAR ;
                                          PAIR %owner %operator ;
                                          UPDATE ;
                                          SWAP ;
                                          PAIR ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          DUG 2 } }
                                      { { DROP ;
                                          DUP ;
                                          SENDER ;
                                          SWAP ;
                                          IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                          CAR ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH bool True }
                                             { { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } } ;
                                          IF { {} }
                                             { { PUSH string
                                                      "WrongCondition: (update.open_variant('remove_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                 FAILWITH } } ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          DUP ;
                                          CAR ;
                                          SWAP ;
                                          CDR ;
                                          DUP ;
                                          CDR ;
                                          SWAP ;
                                          CAR ;
                                          DUP ;
                                          CAR ;
                                          SWAP ;
                                          CDR ;
                                          NONE unit ;
                                          DIG 5 ;
                                          DUP ;
                                          DUG 6 ;
                                          IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                          CDR ;
                                          DIG 6 ;
                                          DUP ;
                                          DUG 7 ;
                                          IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                          DIG 9 ;
                                          DROP ;
                                          CAR ;
                                          PAIR %owner %operator ;
                                          UPDATE ;
                                          SWAP ;
                                          PAIR ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          DUG 2 } } ;
                                    DROP } ;
                             DROP } } ;
                       NIL operation } } } } ;
         PAIR } }
