{ storage
    (pair (pair (pair (bool %active) (pair (bool %complaint) (int %cp)))
                (pair (mutez %g_deposit) (pair (bool %grace_ended) (address %guest))))
          (pair (pair (mutez %h_deposit) (pair (address %host) (bool %in_house)))
                (pair (address %nuki) (pair (bool %refund) (mutez %rent))))) ;
  parameter
    (pair (pair (pair (int %cp) (mutez %g_deposit)) (pair (address %guest) (mutez %h_deposit)))
          (pair (pair (address %host) (string %my_method)) (pair (address %nuki) (mutez %rent)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         CAR ;
         CDR ;
         PUSH string "Contract_Initialisation" ;
         COMPARE ;
         EQ ;
         IF { { SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                CDR ;
                CDR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CDR ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CDR ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                CDR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                CAR ;
                CAR ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CDR ;
                CAR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CDR ;
                CAR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 2 ;
                SWAP ;
                DROP ;
                DUP ;
                CAR ;
                CDR ;
                CDR ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: params.h_deposit == sp.amount" ; FAILWITH } } ;
                SENDER ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CAR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.host == sp.sender" ; FAILWITH } } } }
            { {} } ;
         DUP ;
         CDR ;
         CAR ;
         CDR ;
         PUSH string "Cancellation_Host" ;
         COMPARE ;
         EQ ;
         IF { { SENDER ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CAR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.host == sp.sender" ; FAILWITH } } ;
                PUSH bool False ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.in_house == False" ; FAILWITH } } ;
                PUSH address "tz1RdqVFhB3ipMMbkWPuti5wWtmNZCGFAknm" ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { { NIL operation ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS } }
                   { NIL operation } ;
                PUSH address "tz1RdqVFhB3ipMMbkWPuti5wWtmNZCGFAknm" ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                COMPARE ;
                NEQ ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       ADD ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } } }
            { NIL operation } ;
         PUSH string "Send_Deposit_Guest" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CDR ;
                CAR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == params.guest" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CDR ;
                CDR ;
                CDR ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                CAR ;
                ADD ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.amount == (self.data.g_deposit + self.data.rent)" ;
                       FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CDR ;
                PUSH bool True ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                SENDER ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         PUSH string "Cancellation_Guest" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { SENDER ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.guest == sp.sender" ; FAILWITH } } ;
                PUSH bool True ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CAR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.active == True" ; FAILWITH } } ;
                PUSH bool False ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.in_house == False" ; FAILWITH } } ;
                PUSH address "tz1RdqVFhB3ipMMbkWPuti5wWtmNZCGFAknm" ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CAR ;
                CDR ;
                CAR ;
                COMPARE ;
                EQ ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } ;
                PUSH address "tz1RdqVFhB3ipMMbkWPuti5wWtmNZCGFAknm" ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CAR ;
                CDR ;
                CAR ;
                COMPARE ;
                NEQ ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } } }
            { {} } ;
         PUSH string "Door_Opened" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                IF { { PUSH string "WrongCondition: ~ self.data.in_house" ; FAILWITH } }
                   { {} } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                CDR ;
                CAR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == params.nuki" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         PUSH string "Grace_Period_Ended" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CDR ;
                CAR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == self.data.nuki" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                PUSH bool True ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP ;
                DUP ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CAR ;
                CDR ;
                CAR ;
                CONTRACT unit ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                PUSH nat 2 ;
                DIG 5 ;
                DUP ;
                DUG 6 ;
                CDR ;
                CDR ;
                CDR ;
                CDR ;
                PUSH nat 1 ;
                MUL ;
                EDIV ;
                IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                CAR ;
                PUSH unit Unit ;
                TRANSFER_TOKENS ;
                CONS ;
                SWAP ;
                DROP } }
            { {} } ;
         PUSH string "Guest_Complains" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == self.data.guest" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                CDR ;
                CAR ;
                IF { { PUSH string "WrongCondition: ~ self.data.grace_ended" ; FAILWITH } }
                   { {} } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.in_house" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                PUSH bool True ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         PUSH string "Guest_Accepts_Refund" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == self.data.guest" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.in_house" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                CAR ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.complaint" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CDR ;
                PUSH bool True ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         PUSH string "Guest_Leaves_Contract" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == self.data.guest" ; FAILWITH } } ;
                PUSH bool True ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CAR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.active == True" ; FAILWITH } } ;
                PUSH bool True ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                CAR ;
                CDR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: self.data.in_house == True" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                PUSH address "tz1RdqVFhB3ipMMbkWPuti5wWtmNZCGFAknm" ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                PUSH bool False ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CDR ;
                PUSH bool False ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         PUSH string "End_Of_Rent" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CDR ;
                CAR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF { {} }
                   { { PUSH string "WrongCondition: sp.sender == self.data.nuki" ; FAILWITH } } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                IF { { DIG 2 ; DUP ; DUG 3 ; CDR ; CAR ; CDR ; CDR ; NOT } }
                   { PUSH bool True } ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       BALANCE ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CDR ;
                CDR ;
                CAR ;
                IF { { DIG 2 ; DUP ; DUG 3 ; CDR ; CAR ; CDR ; CDR } }
                   { PUSH bool False } ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       PUSH nat 4 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH nat 1 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       PUSH nat 4 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH nat 1 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                CDR ;
                CDR ;
                CAR ;
                IF { PUSH bool False }
                   { { DIG 2 ; DUP ; DUG 3 ; CDR ; CAR ; CDR ; CDR } } ;
                IF { { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       PUSH nat 2 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       PUSH nat 1 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CONTRACT unit ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PUSH unit Unit ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       DROP } }
                   { {} } ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                CAR ;
                PUSH bool False ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 ;
                DIG 2 ;
                DROP } }
            { {} } ;
         SWAP ;
         DROP ;
         PAIR } }
