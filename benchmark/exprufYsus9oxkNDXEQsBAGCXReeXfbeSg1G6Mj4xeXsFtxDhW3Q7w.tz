{ storage (pair (int %counter) (pair (address %onEven) (address %onOdd))) ;
  parameter (or (unit %reset) (nat %run)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               PUSH int 0 ;
               PAIR ;
               DUG 2 ;
               DROP 2 ;
               NIL operation } }
           { { DUP ;
               PUSH nat 1 ;
               COMPARE ;
               LT ;
               IF { { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH int 1 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      DROP ;
                      PUSH nat 0 ;
                      PUSH nat 2 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      EDIV ;
                      IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CDR } ;
                      COMPARE ;
                      EQ ;
                      IF { { NIL operation ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             CONTRACT (pair (contract %k nat) (nat %x)) ;
                             IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             SELF ;
                             ADDRESS ;
                             CONTRACT %run nat ;
                             IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                             PAIR %k %x ;
                             TRANSFER_TOKENS ;
                             CONS } }
                         { { NIL operation ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             CONTRACT (pair (contract %k nat) (nat %x)) ;
                             IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             SELF ;
                             ADDRESS ;
                             CONTRACT %run nat ;
                             IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                             PAIR %k %x ;
                             TRANSFER_TOKENS ;
                             CONS } } } }
                  { NIL operation } ;
               SWAP ;
               DROP } } ;
         PAIR } }
