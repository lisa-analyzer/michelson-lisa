{ parameter
    (or (or (pair %addCreditor (pair address nat) (pair int mutez)) (unit %checkPoint))
        (or (int %modifyCapital) (pair %modifyCreditor (pair address timestamp) mutez))) ;
  storage
    (pair (pair (pair (int %capitalInplace) (mutez %couponRate))
                (pair (map %creditorsMap
                         address
                         (pair (pair (pair (nat %creditAmount) (timestamp %initialTime))
                                     (pair (bool %is_final) (timestamp %maturityTime)))
                               (mutez %paybackAmount)))
                      (address %debtor)))
          (int %totalCredits)) ;
  code { NIL address ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CDR ;
         PUSH address "tz1NBWgCxEGy8U6UA4hRmemt3YmMXbPPe1YH" ;
         CONTRACT unit ;
         IF_NONE
           { PUSH string "Not a contract" ; FAILWITH }
           { DUP ; DIP { DROP } } ;
         DUP ;
         AMOUNT ;
         UNIT ;
         TRANSFER_TOKENS ;
         NIL operation ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CONS ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only debtor can modify the capital" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "Creditor contract does not exist" ; FAILWITH }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      GET ;
                      IF_NONE
                        { NOW ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PUSH int 86400 ;
                          MUL ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          ADD ;
                          PUSH bool True ;
                          PAIR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 9 ;
                          DUP ;
                          DUG 10 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIP { DROP } ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DROP 5 } }
                        { PUSH string "Creditor contract does not reach maturity" ; FAILWITH } ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } } ;
                 DUP ;
                 DIP { DROP 7 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIP { DROP } }
               { PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        NOW ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        CAR ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        LE ;
                        IF { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; CAR ; CONS }
                           { DIG 1 ; DUP ; DUG 2 } ;
                        DIP { DROP 3 } } ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DUP ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        IF { PUSH string "Creditor contract does not exist" ; FAILWITH }
                           { DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE
                               { PUSH string "Creditor contract does not exist" ; FAILWITH }
                               { DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 NONE (pair (pair (pair (nat %creditAmount) (timestamp %initialTime))
                                                  (pair (bool %is_final) (timestamp %maturityTime)))
                                            (mutez %paybackAmount)) ;
                                 SWAP ;
                                 UPDATE ;
                                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 SUB ;
                                 PUSH int 0 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 LT ;
                                 IF { PUSH string "totalCredits cannot be less than zero." ; FAILWITH }
                                    { PUSH unit Unit } ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 DIP { DROP } ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 SWAP ;
                                 CAR ;
                                 PAIR ;
                                 DIP { DROP 5 } } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DROP 2 } } ;
                        DUP ;
                        DIP { DROP 4 } } ;
                 DUP ;
                 DIP { DROP 3 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "This entrypoint does not accept token" ; FAILWITH }
                    { PUSH unit Unit } ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only debtor can modify the capital" ; FAILWITH }
                    { DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP } } ;
                 DUP ;
                 DIP { DROP 4 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIP { DROP } }
               { DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 PUSH mutez 3000000 ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Please pay exactly 3 tezos to change the ownership" ;
                      FAILWITH }
                    { PUSH unit Unit } ;
                 PUSH int 86400 ;
                 NOW ;
                 ADD ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 COMPARE ;
                 LE ;
                 IF { PUSH string "needs to be at least one day later" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 GET ;
                 IF_NONE
                   { PUSH unit Unit }
                   { PUSH string "new owner has already been on the list" ; FAILWITH } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { PUSH string "Creditor contract does not exist" ; FAILWITH }
                   { DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH int 86400 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     ADD ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "needs to be at least one day before maturity time" ; FAILWITH }
                        { PUSH unit Unit } ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     SUB ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIP { DROP 4 } } ;
                 DUP ;
                 DIP { DROP 8 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 6 } } }
