{ storage
    (map string
         (pair (pair (pair (map %applications address string) (string %company))
                     (pair (string %contact) (pair (int %cur_hires) (string %job_description))))
               (pair (pair (int %max_hires) (address %owner))
                     (pair (map %selected address string) (pair (int %status) (mutez %stipend)))))) ;
  parameter
    (or (or (pair %apply_for_job (string %_job_id) (string %_resume))
            (pair %hire (address %_candidate) (pair (string %_job_id) (string %_offer_letter))))
        (or (pair %list_job
               (pair (string %_company) (string %_contact))
               (pair (string %_job_description) (pair (string %_job_id) (int %_max_hires))))
            (pair %submit (address %_candidate) (string %_job_id)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 28 ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 SOURCE ;
                 DIG 7 ;
                 CDR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.jobs.contains(params._job_id)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.source == self.data.jobs[params._job_id].owner" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 37 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.jobs[params._job_id].applications.contains(params._candidate)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 39 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.jobs[params._job_id].applications.contains(params._candidate)" ;
                      FAILWITH } ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.jobs[params._job_id].status == 0" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.jobs[params._job_id].cur_hires < self.data.jobs[params._job_id].max_hires" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 44 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 CDR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 NONE string ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 46 ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH int 1 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ;
                      DUP ;
                      DIG 2 ;
                      CDR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CDR ;
                      PUSH int 1 ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE }
                    { DROP } } ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF { PUSH string "WrongCondition: ~ (self.data.jobs.contains(params._job_id))" ;
                      FAILWITH }
                    {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH int 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: params._max_hires > 0" ; FAILWITH } ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(0)" ; FAILWITH } ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PUSH mutez 1 ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 ISNAT ;
                 IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                 MUL ;
                 AMOUNT ;
                 EDIV ;
                 IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                 CAR ;
                 MUL ;
                 PUSH int 0 ;
                 PAIR %status %stipend ;
                 EMPTY_MAP address string ;
                 PAIR %selected ;
                 SOURCE ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR %max_hires %owner ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PUSH int 0 ;
                 PAIR %cur_hires %job_description ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 PAIR %contact ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 EMPTY_MAP address string ;
                 PAIR %applications %company ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.jobs.contains(params._job_id)" ;
                      FAILWITH } ;
                 SOURCE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 53 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.jobs[params._job_id].owner == sp.source" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.jobs[params._job_id].selected.contains(params._candidate)" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 CONTRACT unit ;
                 NIL operation ;
                 SWAP ;
                 IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 56 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 NONE string ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUG 2 ;
                 PUSH nat 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 57 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SIZE ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 2 ;
                      NONE (pair (pair (pair (map %applications address string) (string %company))
                                       (pair (string %contact) (pair (int %cur_hires) (string %job_description))))
                                 (pair (pair (int %max_hires) (address %owner))
                                       (pair (map %selected address string) (pair (int %status) (mutez %stipend))))) ;
                      DIG 3 ;
                      CDR ;
                      UPDATE ;
                      SWAP }
                    { SWAP ; DROP } } } ;
         PAIR } }
