{ parameter
    (or (or (or (or (pair %divestLiquidity (pair nat nat) nat)
                    (pair %initializeExchange nat key_hash))
                (or (pair %investLiquidity nat key_hash) (pair %tezToTokenPayment nat address)))
            (or (or (nat %tezToTokenSwap) (pair %tokenToTezPayment (pair nat nat) address))
                (or (pair %tokenToTezSwap nat nat)
                    (pair %tokenToTokenPayment (pair nat nat) (pair address address)))))
        (pair %tokenToTokenSwap (pair nat nat) address)) ;
  storage
    (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                      (pair (address %factoryAddress) (nat %feeRate)))
                (pair (pair (nat %invariant) (big_map %shares address nat))
                      (pair (nat %tezPool) (address %tokenAddress))))
          (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat))) ;
  code { LAMBDA
           (pair (pair (pair address address) (pair nat nat))
                 (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                   (pair (address %factoryAddress) (nat %feeRate)))
                             (pair (pair (nat %invariant) (big_map %shares address nat))
                                   (pair (nat %tezPool) (address %tokenAddress))))
                       (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat))))
           (pair (list operation)
                 (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                   (pair (address %factoryAddress) (nat %feeRate)))
                             (pair (pair (nat %invariant) (big_map %shares address nat))
                                   (pair (nat %tezPool) (address %tokenAddress))))
                       (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat))))
           { DUP ;
             CAR ;
             CDR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tezIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTokensOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTokensOut" ; FAILWITH } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 17 ;
             DUP ;
             DUG 18 ;
             CAR ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 12 } } ;
         LAMBDA
           (pair (pair (pair address address) (pair address nat))
                 (pair nat
                       (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                         (pair (address %factoryAddress) (nat %feeRate)))
                                   (pair (pair (nat %invariant) (big_map %shares address nat))
                                         (pair (nat %tezPool) (address %tokenAddress))))
                             (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat)))))
           (pair (list operation)
                 (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                   (pair (address %factoryAddress) (nat %feeRate)))
                             (pair (pair (nat %invariant) (big_map %shares address nat))
                                   (pair (nat %tezPool) (address %tokenAddress))))
                       (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat))))
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tokensIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             CAR ;
             ADD ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             SUB ;
             ABS ;
             DUP ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             COMPARE ;
             LE ;
             IF { PUSH unit Unit } { PUSH string "Wrong tezPool" ; FAILWITH } ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CAR ;
             CDR ;
             CONTRACT unit ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             NIL operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PUSH mutez 1 ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             MUL ;
             UNIT ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PUSH mutez 0 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIP { DROP 18 } } ;
         LAMBDA
           (pair (pair (pair address address) (pair address nat))
                 (pair (pair nat address)
                       (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                         (pair (address %factoryAddress) (nat %feeRate)))
                                   (pair (pair (nat %invariant) (big_map %shares address nat))
                                         (pair (nat %tezPool) (address %tokenAddress))))
                             (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat)))))
           (pair (list operation)
                 (pair (pair (pair (pair (big_map %candidates address key_hash) (key_hash %delegated))
                                   (pair (address %factoryAddress) (nat %feeRate)))
                             (pair (pair (nat %invariant) (big_map %shares address nat))
                                   (pair (nat %tezPool) (address %tokenAddress))))
                       (pair (pair (nat %tokenPool) (nat %totalShares)) (big_map %votes key_hash nat))))
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tokensIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             CAR ;
             ADD ;
             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             CONTRACT
               (or (pair %launchExchange address address)
                   (pair %tokenToExchangeLookup (pair address address) nat)) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 1 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             MUL ;
             DIG 12 ;
             DUP ;
             DUG 13 ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CDR ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             RIGHT (pair address address) ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 11 } } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong sharesBurned" ; FAILWITH } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Snder shares are too low" ; FAILWITH } { PUSH unit Unit } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SUB ;
                         ABS ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MUL ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MUL ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong minTez" ; FAILWITH } ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong minTokens" ; FAILWITH } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH nat 0 }
                            { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              MUL } ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE
                           { DUP }
                           { DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             DIG 18 ;
                             DUP ;
                             DUG 19 ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             GET ;
                             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                             SUB ;
                             ABS ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DROP 3 } } ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SENDER ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         SENDER ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 1 ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         MUL ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 23 } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Is initiated" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong invariant" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong totalShares" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong amount" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH nat 10 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong tokenAmount" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH mutez 500000000000000 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Wrong amount" ; FAILWITH } { PUSH unit Unit } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         MUL ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH nat 1000 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         PUSH nat 1000 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SELF ;
                         ADDRESS ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         SOME ;
                         SET_DELEGATE ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         PUSH nat 1000 ;
                         DIG 19 ;
                         DUP ;
                         DUG 20 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 20 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong amount" ; FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong tokenAmount" ; FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PUSH mutez 1 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         MUL ;
                         AMOUNT ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong tezPerShare" ; FAILWITH } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong sharesPurchased" ; FAILWITH } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         MUL ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         ADD ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         MUL ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE
                           { DUP }
                           { DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             GET ;
                             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                             SUB ;
                             ABS ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DROP 3 } } ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 18 ;
                         DUP ;
                         DUG 19 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         DIG 20 ;
                         DUP ;
                         DUG 21 ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         ADD ;
                         ADD ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 21 ;
                         DUP ;
                         DUG 22 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         SELF ;
                         ADDRESS ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         COMPARE ;
                         GT ;
                         IF { DUP }
                            { DIG 23 ;
                              DUP ;
                              DUG 24 ;
                              SOME ;
                              SET_DELEGATE ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 26 ;
                              DUP ;
                              DUG 27 ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CONS ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP } } ;
                         DUP ;
                         DIP { DROP 28 } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         SENDER ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             SENDER ;
             SENDER ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIP { DROP } } ;
         DIP { DROP 6 } } }
