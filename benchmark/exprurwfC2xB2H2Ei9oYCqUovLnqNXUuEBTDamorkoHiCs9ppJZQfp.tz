{ parameter
    (or (or (or (or (unit %accept_admin) (unit %adminitrable))
                (or (pair %new_prepayment (pair (address %addr) (string %txid)) (int %value))
                    (unit %noadmin)))
            (or (or (pair %pay (int %expected_amount) (int %value))
                    (pair %set_discount (int %0) (int %1)))
                (or (int %set_max_amount) (int %set_max_total_amount))))
        (or (int %set_payment_duration) (address %transfer_admin))) ;
  storage
    (pair (pair (pair (pair (address %admin) (address %admin_candidate))
                      (pair (pair %discount (int %0) (int %1)) (address %issuer)))
                (pair (pair (int %max_amount) (int %max_total_amount))
                      (pair (int %payment_duration)
                            (map %prepayment_assets string (pair (int %amount) (timestamp %expiration))))))
          (pair (pair (int %state) (map %table_assets address (list string))) (int %total))) ;
  code { PUSH int 0 ;
         PUSH int 1 ;
         LAMBDA
           (pair (pair %0
                    (pair (pair (pair (address %admin) (address %admin_candidate))
                                (pair (pair %discount (int %0) (int %1)) (address %issuer)))
                          (pair (pair (int %max_amount) (int %max_total_amount))
                                (pair (int %payment_duration)
                                      (map %prepayment_assets string (pair (int %amount) (timestamp %expiration))))))
                    (pair (pair (int %state) (map %table_assets address (list string))) (int %total)))
                 (string %1))
           (pair (pair (int %amount) (timestamp %expiration)) (string %id))
           { DUP ;
             CDR ;
             DUP ;
             DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CDR ; CDR ; CDR } ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             PAIR ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair %0
                    (pair (pair (pair (address %admin) (address %admin_candidate))
                                (pair (pair %discount (int %0) (int %1)) (address %issuer)))
                          (pair (pair (int %max_amount) (int %max_total_amount))
                                (pair (int %payment_duration)
                                      (map %prepayment_assets string (pair (int %amount) (timestamp %expiration))))))
                    (pair (pair (int %state) (map %table_assets address (list string))) (int %total)))
                 (pair %1 (pair (int %amount) (timestamp %expiration)) (string %id)))
           (pair (pair (pair (pair (address %admin) (address %admin_candidate))
                             (pair (pair %discount (int %0) (int %1)) (address %issuer)))
                       (pair (pair (int %max_amount) (int %max_total_amount))
                             (pair (int %payment_duration)
                                   (map %prepayment_assets string (pair (int %amount) (timestamp %expiration))))))
                 (pair (pair (int %state) (map %table_assets address (list string))) (int %total)))
           { DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIP 4 { DUP } ;
             DIG 4 ;
             DIP 3 { DUP } ;
             DIG 3 ;
             DIP { DIP 4 { DUP } ;
                   DIG 4 ;
                   CAR ;
                   CAR ;
                   DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR } ;
                   PAIR ;
                   SOME ;
                   DIP { DIP 2 { DUP } ; DIG 2 } } ;
             UPDATE ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DIP { DROP 6 } } ;
         LAMBDA
           (pair (pair %0
                    (pair (pair (pair (address %admin) (address %admin_candidate))
                                (pair (pair %discount (int %0) (int %1)) (address %issuer)))
                          (pair (pair (int %max_amount) (int %max_total_amount))
                                (pair (int %payment_duration)
                                      (map %prepayment_assets string (pair (int %amount) (timestamp %expiration))))))
                    (pair (pair (int %state) (map %table_assets address (list string))) (int %total)))
                 (address %1))
           (pair (address %customer) (list %prepayments string))
           { DUP ;
             CDR ;
             DUP ;
             DIP { DIP { DUP } ; SWAP ; CAR ; CDR ; CAR ; CDR } ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP 5 { DUP } ;
         DIG 5 ;
         CDR ;
         DIP 6 { DUP } ;
         DIG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIP 4 { DUP } ;
                         DIG 4 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                         DIP { DUP } ;
                         SWAP ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 3 } }
                       { DIP 4 { DUP } ;
                         DIG 4 ;
                         DUP ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 10 { DUP } ; DIG 10 } ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 13 { DUP } ;
                              DIG 13 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP } }
                            { PUSH string "invalid state" ; FAILWITH } ;
                         DUP ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 4 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         DIP { DIP 4 { DUP } ; DIG 4 } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         NIL operation ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 14 { DUP } ; DIG 14 } ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "require r1 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CDR ;
                         DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CDR ; CAR ; CAR } ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "require f1 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         DIP { DIP 5 { DUP } ; DIG 5 ; CDR } ;
                         ADD ;
                         DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CAR ; CDR } ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "require f2 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 5 { DUP } ;
                         DIG 5 ;
                         NIL address ;
                         DIP 7 { DUP } ;
                         DIG 7 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIP { DUP } ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                CAR ;
                                DIP { DUP ; CAR } ;
                                CONS ;
                                DIP { DROP } } ;
                         DUP ;
                         NIL address ;
                         SWAP ;
                         ITER { SWAP ; PAIR ; DUP ; CDR ; DIP { DUP ; CAR } ; CONS ; DIP { DROP } } ;
                         DUP ;
                         DIP { DROP 3 ; DIP 7 { DUP } ; DIG 7 ; CAR ; CAR } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         PUSH bool False ;
                         SWAP ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                DIP { DUP ; CDR ; DIP { DIP { DUP } ; SWAP ; CDR } ; COMPARE ; EQ } ;
                                OR ;
                                DIP { DROP } } ;
                         NOT ;
                         DIP { DROP } ;
                         IF { DIP 6 { DUP } ;
                              DIG 6 ;
                              DIP { DIP 7 { DUP } ; DIG 7 ; CAR ; CAR ; NIL string ; SWAP ; PAIR } ;
                              PAIR ;
                              NIL (pair (pair (int %amount) (timestamp %expiration)) (string %id)) ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              CAR ;
                              DIP { DUP ; CAR ; CDR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP } ;
                              MEM ;
                              IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { DIP 4 { DUP } ;
                                    DIG 4 ;
                                    CDR ;
                                    SOME ;
                                    DIP { DIP 2 { DUP } ; DIG 2 } } ;
                              UPDATE ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 6 ; DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP } ;
                              ITER { SWAP ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP ; CDR } ;
                                     PAIR ;
                                     DIP { DIP 18 { DUP } ; DIG 18 } ;
                                     EXEC ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     DIP 2 { DUP } ;
                                     DIG 2 ;
                                     CAR ;
                                     DIP 2 { DUP } ;
                                     DIG 2 ;
                                     DIP { DROP ; CDR } ;
                                     PAIR ;
                                     CAR ;
                                     DIP { DROP 2 } } ;
                              DUP ;
                              DIP { DROP 3 ; DUP } ;
                              SWAP ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DROP 2 } }
                            { DUP } ;
                         DUP ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         DIP { DIP 9 { DUP } ; DIG 9 ; CDR ; PUSH int 1 ; SWAP ; PAIR } ;
                         PAIR ;
                         DIP { DUP ; CAR ; CAR ; CDR ; CAR } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         IF_LEFT
                           { DUP ;
                             IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                 MUL ;
                                 DIP { DIP 3 { DUP } ;
                                       DIG 3 ;
                                       CDR ;
                                       DIP { DIP 2 { DUP } ; DIG 2 ; CAR } ;
                                       MUL } ;
                                 PAIR ;
                                 DIP { DROP } }
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                 MUL ;
                                 DIP { DIP 2 { DUP } ;
                                       DIG 2 ;
                                       CAR ;
                                       DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                                       MUL } ;
                                 SUB ;
                                 DIP { DIP 3 { DUP } ;
                                       DIG 3 ;
                                       CDR ;
                                       DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                       MUL } ;
                                 PAIR ;
                                 DIP { DROP } } ;
                             DIP { DROP } }
                           { DUP ;
                             IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 DIP { DIP 2 { DUP } ; DIG 2 ; CAR } ;
                                 MUL ;
                                 DIP { DIP 3 { DUP } ;
                                       DIG 3 ;
                                       CDR ;
                                       DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                       MUL } ;
                                 PAIR ;
                                 DIP { DROP } }
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                 MUL ;
                                 DIP { DIP 2 { DUP } ;
                                       DIG 2 ;
                                       CAR ;
                                       DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                                       MUL } ;
                                 ADD ;
                                 DIP { DIP 3 { DUP } ;
                                       DIG 3 ;
                                       CDR ;
                                       DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                       MUL } ;
                                 PAIR ;
                                 DIP { DROP } } ;
                             DIP { DROP } } ;
                         DUP ;
                         DIP { DROP 4 } ;
                         DUP ;
                         CAR ;
                         DIP { DUP ; CDR } ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIP { DROP ; DUP } ;
                         SWAP ;
                         DIP { DIP { DUP } ;
                               SWAP ;
                               DIP { DIP 10 { DUP } ; DIG 10 ; CAR ; CAR } ;
                               PAIR ;
                               DIP { DIP 17 { DUP } ; DIG 17 } ;
                               EXEC } ;
                         PAIR ;
                         DIP { DUP ;
                               DIP { DIP { DUP } ; SWAP ; CAR ; CDR ; CDR ; CAR ; NOW ; ADD } ;
                               PAIR ;
                               DIP { DIP 10 { DUP } ; DIG 10 ; CAR ; CDR } ;
                               PAIR } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIP { DUP } ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP { DUP } ;
                         PAIR ;
                         DIP { DIP 21 { DUP } ; DIG 21 } ;
                         EXEC ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP { DIP 3 { DUP } ;
                               DIG 3 ;
                               CDR ;
                               SOME ;
                               DIP { DIP 4 { DUP } ; DIG 4 ; CDR ; CAR ; CDR } } ;
                         UPDATE ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ;
                         PAIR ;
                         DIP { DIP 23 { DUP } ; DIG 23 } ;
                         EXEC ;
                         DUP ;
                         DIP { DROP 6 } ;
                         DUP ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIP { DIP 2 { DUP } ; DIG 2 } ;
                         ADD ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIP 12 { DUP } ;
                         DIG 12 ;
                         CAR ;
                         CAR ;
                         CONTRACT
                           (or (or (pair %add_expense (int %newtotal) (int %value))
                                   (pair %add_prepayment (int %amount) (string %txid)))
                               (pair %pay_ (int %amount) (address %seller))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         DIP { DIP 13 { DUP } ; DIG 13 ; CAR ; CDR } ;
                         PAIR ;
                         RIGHT (pair (int %newtotal) (int %value)) ;
                         LEFT (pair (int %amount) (address %seller)) ;
                         DUP ;
                         DIP { DIP { DUP } ; SWAP ; PUSH mutez 0 } ;
                         TRANSFER_TOKENS ;
                         DUP ;
                         DIP { DIP 13 { DUP } ; DIG 13 } ;
                         CONS ;
                         DIP { DIP 3 { DUP } ; DIG 3 } ;
                         PAIR ;
                         DIP { DROP 18 } }
                       { DIP 4 { DUP } ;
                         DIG 4 ;
                         DUP ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 11 { DUP } ; DIG 11 } ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 12 { DUP } ;
                              DIG 12 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP } }
                            { PUSH string "invalid state" ; FAILWITH } ;
                         DUP ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 4 } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         DIP { DIP 4 { DUP } ; DIG 4 } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         NIL operation ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         PUSH int 0 ;
                         SWAP ;
                         COMPARE ;
                         GT ;
                         NOT ;
                         IF { PUSH string "require r2 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         SENDER ;
                         SWAP ;
                         PAIR ;
                         DIP { DIP 10 { DUP } ; DIG 10 } ;
                         EXEC ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         DIP { DIP 3 { DUP } ;
                               DIG 3 ;
                               DIP { DUP ; CDR } ;
                               PAIR ;
                               DUP ;
                               CDR ;
                               NIL string ;
                               SWAP ;
                               ITER { SWAP ;
                                      PAIR ;
                                      DUP ;
                                      CAR ;
                                      DIP 2 { DUP } ;
                                      DIG 2 ;
                                      CAR ;
                                      DIP { DIP { DUP } ; SWAP ; CDR } ;
                                      PAIR ;
                                      DIP { DIP 16 { DUP } ; DIG 16 } ;
                                      EXEC ;
                                      DUP ;
                                      CAR ;
                                      CAR ;
                                      PUSH int 0 ;
                                      SWAP ;
                                      COMPARE ;
                                      GT ;
                                      DIP { DUP ; CAR ; CDR ; NOW ; SWAP ; COMPARE ; GE } ;
                                      AND ;
                                      IF { DUP ; CDR ; DIP { DIP { DUP } ; SWAP } ; CONS }
                                         { DIP { DUP } ; SWAP } ;
                                      DIP { DROP 3 } } ;
                               DIP { DROP } } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         NIL string ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         DIP { DUP } ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                SOME ;
                                NIL string ;
                                SWAP ;
                                PAIR ;
                                DIP { DUP } ;
                                SWAP ;
                                CAR ;
                                DIP { DUP } ;
                                ITER { SWAP ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       DIP { DUP } ;
                                       SWAP ;
                                       CDR ;
                                       DIP { DUP } ;
                                       SWAP ;
                                       CAR ;
                                       IF_NONE
                                         { DUP ; DIP { DIP { DUP } ; SWAP ; CDR } ; CONS ; NONE string ; PAIR }
                                         { DIP { DUP } ;
                                           SWAP ;
                                           DIP { DUP } ;
                                           PAIR ;
                                           PUSH int 0 ;
                                           DIP 9 { DUP } ;
                                           DIG 9 ;
                                           DIP { DIP { DUP } ; SWAP ; CAR } ;
                                           PAIR ;
                                           DIP { DIP 24 { DUP } ; DIG 24 } ;
                                           EXEC ;
                                           DIP 10 { DUP } ;
                                           DIG 10 ;
                                           DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                           PAIR ;
                                           DIP { DIP 25 { DUP } ; DIG 25 } ;
                                           EXEC ;
                                           DIP 2 { DUP } ;
                                           DIG 2 ;
                                           DIP 2 { DUP } ;
                                           DIG 2 ;
                                           CAR ;
                                           CDR ;
                                           DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
                                           COMPARE ;
                                           GT ;
                                           IF { PUSH int 1 }
                                              { DIP 3 { DUP } ;
                                                DIG 3 ;
                                                DIP { DUP } ;
                                                SWAP ;
                                                DIP 4 { DUP } ;
                                                DIG 4 ;
                                                CAR ;
                                                CDR ;
                                                DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CDR } ;
                                                COMPARE ;
                                                LT ;
                                                IF { DIP { DUP } ; SWAP ; PUSH int 1 ; NEG ; DIP { DROP } }
                                                   { DIP { DUP } ; SWAP } ;
                                                DIP { DROP 2 } } ;
                                           DIP { DROP 5 ; PUSH int 0 } ;
                                           COMPARE ;
                                           LT ;
                                           IF { DIP { DUP } ;
                                                SWAP ;
                                                DIP { DUP ; DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ; CONS } ;
                                                CONS ;
                                                NONE string ;
                                                PAIR }
                                              { DUP ;
                                                SOME ;
                                                DIP { DIP { DUP } ; SWAP ; DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ; CONS } ;
                                                PAIR } ;
                                           DIP { DROP } } ;
                                       DUP ;
                                       DIP { DROP 4 } } ;
                                DUP ;
                                CAR ;
                                IF_NONE
                                  { DUP ; CDR }
                                  { DUP ; DIP { DIP { DUP } ; SWAP ; CDR } ; CONS ; DIP { DROP } } ;
                                DIP { DROP 3 } } ;
                         DUP ;
                         DIP { DROP 4 } ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         DIP { NIL string ;
                               DIP 5 { DUP } ;
                               DIG 5 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               DIP { DUP } ;
                               ITER { SWAP ;
                                      PAIR ;
                                      DUP ;
                                      CDR ;
                                      CAR ;
                                      DIP { DUP ; CAR } ;
                                      CONS ;
                                      DIP { DROP } } ;
                               DUP ;
                               NIL string ;
                               SWAP ;
                               ITER { SWAP ; PAIR ; DUP ; CDR ; DIP { DUP ; CAR } ; CONS ; DIP { DROP } } ;
                               DUP ;
                               DIP { DROP 3 } } ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         PUSH int 0 ;
                         SWAP ;
                         ITER { SWAP ;
                                PAIR ;
                                DIP { DUP } ;
                                SWAP ;
                                CAR ;
                                DIP { DUP ; CDR } ;
                                PAIR ;
                                DIP { DIP 16 { DUP } ; DIG 16 } ;
                                EXEC ;
                                DIP { DUP } ;
                                SWAP ;
                                CAR ;
                                DIP { DUP ; CAR ; CAR } ;
                                ADD ;
                                DIP { DROP 2 } } ;
                         DIP { DROP } ;
                         DUP ;
                         DIP { DIP 6 { DUP } ; DIG 6 ; CDR } ;
                         COMPARE ;
                         GE ;
                         NOT ;
                         IF { PUSH string "require failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 7 { DUP } ;
                         DIG 7 ;
                         CAR ;
                         DIP { DIP { DUP } ; SWAP } ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "require failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         DIP { DIP 8 { DUP } ;
                               DIG 8 ;
                               CDR ;
                               DIP { DIP 7 { DUP } ; DIG 7 } ;
                               PAIR } ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                CDR ;
                                DIP { DUP } ;
                                SWAP ;
                                CAR ;
                                CAR ;
                                DIP { DUP } ;
                                SWAP ;
                                DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                PAIR ;
                                DIP { DIP 20 { DUP } ; DIG 20 } ;
                                EXEC ;
                                DIP { DUP } ;
                                SWAP ;
                                DIP { DIP 2 { DUP } ; DIG 2 } ;
                                PAIR ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                PUSH int 0 ;
                                SWAP ;
                                COMPARE ;
                                GT ;
                                IF { DIP 2 { DUP } ;
                                     DIG 2 ;
                                     DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     CDR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     DIP { DUP } ;
                                     COMPARE ;
                                     LT ;
                                     IF { DIP { DUP } ; SWAP } { DUP } ;
                                     DIP { DROP 3 } ;
                                     DIP 3 { DUP } ;
                                     DIG 3 ;
                                     DIP { DUP } ;
                                     SUB ;
                                     DIP 3 { DUP } ;
                                     DIG 3 ;
                                     CDR ;
                                     DUP ;
                                     DIP { DIP 6 { DUP } ; DIG 6 ; CAR ; CDR ; CDR ; CDR } ;
                                     GET ;
                                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                                     DIP 7 { DUP } ;
                                     DIG 7 ;
                                     DIP 2 { DUP } ;
                                     DIG 2 ;
                                     DIP { DIP { DUP } ;
                                           SWAP ;
                                           DIP 2 { DUP } ;
                                           DIG 2 ;
                                           CAR ;
                                           DIP { DIP 5 { DUP } ; DIG 5 } ;
                                           SUB ;
                                           SWAP ;
                                           CDR ;
                                           SWAP ;
                                           PAIR ;
                                           SOME ;
                                           DIP { DIP 8 { DUP } ; DIG 8 ; CAR ; CDR ; CDR ; CDR } } ;
                                     UPDATE ;
                                     DIP { DUP ;
                                           CDR ;
                                           SWAP ;
                                           CAR ;
                                           DUP ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           DUP ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           CAR } ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DIP 5 { DUP } ;
                                     DIG 5 ;
                                     DIP 4 { DUP } ;
                                     DIG 4 ;
                                     SWAP ;
                                     CDR ;
                                     SWAP ;
                                     PAIR ;
                                     CAR ;
                                     DIP { DUP } ;
                                     PAIR ;
                                     DIP { DROP 5 } }
                                   { DUP } ;
                                DIP 5 { DUP } ;
                                DIG 5 ;
                                DIP 6 { DUP } ;
                                DIG 6 ;
                                CAR ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                DIP { DUP } ;
                                SWAP ;
                                CAR ;
                                DIP 3 { DUP } ;
                                DIG 3 ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                CAR ;
                                DIP { DROP 7 } } ;
                         SENDER ;
                         CONTRACT
                           (or (or (pair %add_expense (int %newtotal) (int %value))
                                   (pair %add_prepayment (int %amount) (string %txid)))
                               (pair %pay_ (int %amount) (address %seller))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         DIP { DIP 10 { DUP } ; DIG 10 ; CDR } ;
                         SUB ;
                         DIP { DIP 10 { DUP } ; DIG 10 ; CDR } ;
                         PAIR ;
                         LEFT (pair (int %amount) (string %txid)) ;
                         LEFT (pair (int %amount) (address %seller)) ;
                         DUP ;
                         DIP { DIP { DUP } ; SWAP ; PUSH mutez 0 } ;
                         TRANSFER_TOKENS ;
                         DUP ;
                         DIP { DIP 10 { DUP } ; DIG 10 } ;
                         CONS ;
                         DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                         PAIR ;
                         DIP { DROP 15 } }
                       { DUP ;
                         DIP { DIP 4 { DUP } ; DIG 4 } ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 12 { DUP } ; DIG 12 } ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "require r4 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 5 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         DIP { DIP 4 { DUP } ; DIG 4 } ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 12 { DUP } ; DIG 12 } ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "require r5 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 5 } }
                       { DUP ;
                         DIP { DIP 4 { DUP } ; DIG 4 } ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIP { DIP 12 { DUP } ; DIG 12 } ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "require r6 failed" ; FAILWITH } { PUSH unit Unit } ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 5 } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIP { DIP 10 { DUP } ; DIG 10 } ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "require r3 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 CAR ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 5 } }
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 CAR ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 4 } } ;
             DIP { DROP } } ;
         DIP { DROP 7 } } }
