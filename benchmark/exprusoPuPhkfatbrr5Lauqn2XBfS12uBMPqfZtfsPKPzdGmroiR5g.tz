{ parameter
    (or (or (or (or (pair %divestLiquidity (pair nat nat) nat) (nat %initializeExchange))
                (or (nat %investLiquidity) (pair %setVotesDelegation address bool)))
            (or (or (pair %tezToTokenPayment nat address) (nat %tezToTokenSwap))
                (or (pair %tokenToTezPayment (pair nat nat) address) (pair %tokenToTezSwap nat nat))))
        (or (or (pair %tokenToTokenPayment (pair nat nat) (pair address address))
                (pair %tokenToTokenSwap (pair nat nat) address))
            (or (address %veto) (pair %vote address key_hash)))) ;
  storage
    (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                      (pair (nat %feeRate) (nat %invariant)))
                (pair (pair (key_hash %next_delegated) (big_map %shares address nat))
                      (pair (nat %tezPool) (address %tokenAddress))))
          (pair (pair (pair (nat %tokenPool) (nat %totalShares))
                      (pair (nat %veto) (big_map %veto_voters address nat)))
                (pair (pair (big_map %vetos key_hash bool)
                            (big_map %voters
                               address
                               (pair (map %allowances address bool) (option %candidate key_hash))))
                      (big_map %votes key_hash nat)))) ;
  code { LAMBDA
           (pair (pair (pair address key_hash) (pair nat nat))
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           (pair (option operation)
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           { DUP ;
             CAR ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DUP ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SENDER ;
             COMPARE ;
             NEQ ;
             OR ;
             DIP { DROP 3 } ;
             IF { PUSH unit Unit }
                { PUSH string "Sender not allowed to spend token from source" ; FAILWITH } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE
               { PUSH unit Unit }
               { PUSH string "Candidate was banned by veto" ; FAILWITH } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SOME ;
             EMPTY_MAP address bool ;
             PAIR ;
             DUP ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             GET ;
             IF_NONE
               { DUP }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 IF_NONE
                   { DUP }
                   { DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     SUB ;
                     ABS ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SOME ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 3 } } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DUP ;
             CAR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             ADD ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 12 ;
             DUP ;
             DUG 13 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             NONE operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             COMPARE ;
             GT ;
             IF { DUP }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  DIP { DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        DUP ;
                        CAR ;
                        SWAP ;
                        CDR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        CDR } ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  DIG 13 ;
                  DUP ;
                  DUG 14 ;
                  SOME ;
                  SET_DELEGATE ;
                  SOME ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 16 ;
                  DUP ;
                  DUG 17 ;
                  DIP { DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        CDR } ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  CDR ;
                  SWAP ;
                  PAIR ;
                  DIP { DROP 2 } } ;
             DUP ;
             DIP { DROP 16 } } ;
         LAMBDA
           (pair (pair (pair address address) (pair nat nat))
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           (pair (list operation)
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           { DUP ;
             CAR ;
             CDR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tezIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTokensOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTokensOut" ; FAILWITH } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIP { DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 17 ;
             DUP ;
             DUG 18 ;
             CAR ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 12 } } ;
         LAMBDA
           (pair (pair (pair address address) (pair address nat))
                 (pair nat
                       (pair (pair (pair (pair key_hash address) (pair nat nat))
                                   (pair (pair key_hash (big_map address nat)) (pair nat address)))
                             (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                                   (pair (pair (big_map key_hash bool)
                                               (big_map address (pair (map address bool) (option key_hash))))
                                         (big_map key_hash nat))))))
           (pair (list operation)
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tokensIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             ADD ;
             DIP { DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             CAR ;
             CAR ;
             CDR ;
             CONTRACT unit ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 1 ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             MUL ;
             UNIT ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 14 ;
             DUP ;
             DUG 15 ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 17 ;
             DUP ;
             DUG 18 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 12 } } ;
         LAMBDA
           (pair (pair (pair address address) (pair address nat))
                 (pair (pair nat address)
                       (pair (pair (pair (pair key_hash address) (pair nat nat))
                                   (pair (pair key_hash (big_map address nat)) (pair nat address)))
                             (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                                   (pair (pair (big_map key_hash bool)
                                               (big_map address (pair (map address bool) (option key_hash))))
                                         (big_map key_hash nat))))))
           (pair (list operation)
                 (pair (pair (pair (pair key_hash address) (pair nat nat))
                             (pair (pair key_hash (big_map address nat)) (pair nat address)))
                       (pair (pair (pair nat nat) (pair nat (big_map address nat)))
                             (pair (pair (big_map key_hash bool)
                                         (big_map address (pair (map address bool) (option key_hash))))
                                   (big_map key_hash nat)))))
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong tokensIn" ; FAILWITH } ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             GT ;
             IF { PUSH unit Unit } { PUSH string "Wrong minTezOut" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             ADD ;
             DIP { DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR } ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             MUL ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             CONTRACT
               (or (pair %launchExchange address address)
                   (pair %tokenToExchangeLookup (pair address address) nat)) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 1 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             MUL ;
             DIG 12 ;
             DUP ;
             DUG 13 ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CDR ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             RIGHT (pair address address) ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat) (nat %burn))
                       (or (pair %getAllowance (pair address address) (contract nat))
                           (pair %getBalance address (contract nat))))
                   (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                       (pair %transfer (pair address address) nat))) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             DIG 15 ;
             DUP ;
             DUG 16 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 16 ;
             DUP ;
             DUG 17 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             RIGHT (or (pair unit (contract nat)) nat) ;
             RIGHT
               (or (or (pair address nat) nat)
                   (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 11 } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong sharesBurned" ; FAILWITH } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Snder shares are too low" ; FAILWITH } { PUSH unit Unit } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SUB ;
                         ABS ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MUL ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MUL ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong minTez" ; FAILWITH } ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong minTokens" ; FAILWITH } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH nat 0 }
                            { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              MUL } ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE
                           { DUP }
                           { DUP ;
                             CDR ;
                             IF_NONE
                               { DIG 1 ; DUP ; DUG 2 }
                               { DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 DIG 20 ;
                                 DUP ;
                                 DUG 21 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 SUB ;
                                 ABS ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIG 19 ;
                                 DUP ;
                                 DUG 20 ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DUP ;
                                      DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      NONE (pair (map address bool) (option key_hash)) ;
                                      SENDER ;
                                      UPDATE ;
                                      DIP { DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            CAR } ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      DIP { DROP 2 } }
                                    { DUP } ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIP { DROP } ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIP { DROP 5 } } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DROP 3 } } ;
                         DUP ;
                         NIL operation ;
                         SENDER ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         MUL ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         SENDER ;
                         DIG 23 ;
                         DUP ;
                         DUG 24 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 19 } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong invariant" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong totalShares" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong amount" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH nat 10 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "Wrong tokenAmount" ; FAILWITH } { PUSH unit Unit } ;
                         PUSH mutez 500000000000000 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "Wrong amount" ; FAILWITH } { PUSH unit Unit } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         MUL ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH nat 1000 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         PUSH nat 1000 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 13 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong amount" ; FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit } { PUSH string "Wrong tokenAmount" ; FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PUSH mutez 1 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         MUL ;
                         AMOUNT ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong tezPerShare" ; FAILWITH } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit } { PUSH string "Wrong sharesPurchased" ; FAILWITH } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         MUL ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         ADD ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CDR } ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         MUL ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT
                           (or (or (or (pair %approve address nat) (nat %burn))
                                   (or (pair %getAllowance (pair address address) (contract nat))
                                       (pair %getBalance address (contract nat))))
                               (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
                                   (pair %transfer (pair address address) nat))) ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DIG 20 ;
                         DUP ;
                         DUG 21 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         RIGHT (or (pair unit (contract nat)) nat) ;
                         RIGHT
                           (or (or (pair address nat) nat)
                               (or (pair (pair address address) (contract nat)) (pair address (contract nat)))) ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         GET ;
                         IF_NONE
                           { DUP }
                           { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             PAIR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             IF_NONE
                               { DUP }
                               { DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 DIG 15 ;
                                 DUP ;
                                 DUG 16 ;
                                 DIG 12 ;
                                 DUP ;
                                 DUG 13 ;
                                 ADD ;
                                 DIG 12 ;
                                 DUP ;
                                 DUG 13 ;
                                 PAIR ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 SENDER ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 32 ;
                                 DUP ;
                                 DUG 33 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 PAIR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 IF_NONE
                                   { DIG 6 ; DUP ; DUG 7 }
                                   { DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CONS ;
                                     DIP { DROP 2 } } ;
                                 SWAP ;
                                 CDR ;
                                 SWAP ;
                                 PAIR ;
                                 DIP { DROP 2 } } ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             SWAP ;
                             PAIR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DIP { DROP 3 } } ;
                         DUP ;
                         DIP { DROP 21 } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DUP }
                            { DUP ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DROP 3 } } ;
                         DUP ;
                         DIP { DROP 4 } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } }
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         PAIR ;
                         SENDER ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     SWAP ;
                     EXEC ;
                     DIP { DROP } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     SENDER ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     SWAP ;
                     EXEC ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 5 } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     IF_NONE
                       { DUP }
                       { NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIP { DROP 3 } } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 7 } } ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 7 } } }
