{ storage
    (pair (pair (set %_allEscrowAddresses address) (int %_creationCost))
          (pair (big_map %_escrowAddressByParty address (set address)) (address %owner))) ;
  parameter
    (pair (pair (pair (address %admin) (int %amount_A))
                (pair (int %amount_B) (address %eventSinkContractAddress)))
          (pair (pair (timestamp %expiryTime) (address %publicAddress_A))
                (pair (address %publicAddress_B)
                      (pair (address %tokenAddress_A) (address %tokenAddress_B))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CDR ;
         CDR ;
         CAR ;
         PAIR %tokenAddress_A %tokenAddress_B ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CDR ;
         CAR ;
         PAIR %publicAddress_B ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CDR ;
         PUSH (map string
                   (pair (int %amount) (pair (address %publicAddress) (address %tokenAddress))))
              {} ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CDR ;
         CDR ;
         CAR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         CAR ;
         CDR ;
         PAIR %publicAddress %tokenAddress ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CAR ;
         CDR ;
         PAIR %amount ;
         SOME ;
         PUSH string "party_A" ;
         UPDATE ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         CDR ;
         CAR ;
         PAIR %publicAddress %tokenAddress ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CDR ;
         CAR ;
         PAIR %amount ;
         SOME ;
         PUSH string "party_B" ;
         UPDATE ;
         PAIR %partiesDetails %publicAddress_A ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CAR ;
         CAR ;
         PAIR %expiryTime ;
         PAIR ;
         PUSH bool False ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         CDR ;
         PAIR %eventSinkContractAddress %exchanged ;
         NOW ;
         PAIR %creationTime ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         CAR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CAR ;
         CDR ;
         PAIR %amount_A %amount_B ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CAR ;
         CAR ;
         PAIR %admin ;
         PAIR ;
         PAIR ;
         PUSH mutez 0 ;
         NONE key_hash ;
         CREATE_CONTRACT
           { parameter unit ;
             storage
               (pair (pair (pair (address %admin) (pair (int %amount_A) (int %amount_B)))
                           (pair (timestamp %creationTime)
                                 (pair (address %eventSinkContractAddress) (bool %exchanged))))
                     (pair (pair (timestamp %expiryTime)
                                 (pair (map %partiesDetails
                                          string
                                          (pair (int %amount) (pair (address %publicAddress) (address %tokenAddress))))
                                       (address %publicAddress_A)))
                           (pair (address %publicAddress_B)
                                 (pair (address %tokenAddress_A) (address %tokenAddress_B))))) ;
             code { { DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SENDER ;
                      COMPARE ;
                      EQ ;
                      IF { {} } { { PUSH string "01" ; FAILWITH } } ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      IF { { PUSH string "Escrow already exchanged" ; FAILWITH } } { {} } ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      CAR ;
                      NOW ;
                      COMPARE ;
                      LE ;
                      IF { {} } { { PUSH string "Escrow already expired" ; FAILWITH } } ;
                      NIL operation ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR %f %t ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      PAIR %amount ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR %f %t ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR %amount ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DIG 2 ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      PUSH bool True ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DUG 2 ;
                      DUP ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CONTRACT %exchangeEvent
                        (pair (pair (address %DVPaddress) (int %amount_A))
                              (pair (int %amount_B) (pair (address %party_A) (address %party_B)))) ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      PUSH mutez 0 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR %party_A %party_B ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR %amount_B ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      SELF ;
                      DIG 6 ;
                      DROP ;
                      DIG 6 ;
                      DROP ;
                      ADDRESS ;
                      PAIR %DVPaddress %amount_A ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      PAIR } } } ;
         PAIR ;
         DUP ;
         CAR ;
         NIL operation ;
         SWAP ;
         CONS ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CAR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CAR ;
         CDR ;
         MEM ;
         IF { {} }
            { { DIG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                PUSH (option (set address)) (Some {}) ;
                DIG 6 ;
                DUP ;
                DUG 7 ;
                CDR ;
                CAR ;
                CDR ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 } } ;
         DIG 3 ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CDR ;
         CAR ;
         CDR ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
         PUSH bool True ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         SOME ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR ;
         DUG 3 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CAR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CDR ;
         CAR ;
         MEM ;
         IF { {} }
            { { DIG 3 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                PUSH (option (set address)) (Some {}) ;
                DIG 6 ;
                DUP ;
                DUG 7 ;
                CDR ;
                CDR ;
                CAR ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUG 3 } } ;
         DIG 3 ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 6 ;
         CDR ;
         CDR ;
         CAR ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
         PUSH bool True ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         SOME ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR ;
         DUG 2 ;
         DIG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH bool True ;
         DIG 5 ;
         CDR ;
         SOME ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
         UPDATE ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR } }
