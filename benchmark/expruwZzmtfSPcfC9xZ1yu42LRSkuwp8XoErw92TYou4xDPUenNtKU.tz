{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (string %symbol) (nat %token_id))))
            (or (pair %mutez_transfer (mutez %amount) (address %destination))
                (address %set_administrator)))
        (or (or (bool %set_pause)
                (pair %token_metadata
                   (list %token_ids nat)
                   (lambda %handler
                      (list (pair (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                      unit)))
            (or (contract %token_metadata_registry address)
                (or (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (address %operator))
                           (pair %remove_operator (address %owner) (address %operator)))))))) ;
  storage
    (pair (pair (address %administrator)
                (pair (nat %all_tokens) (big_map %ledger (pair address nat) nat)))
          (pair (pair (unit %version_20200724_tzip_a57dfe86_nft_mutran_contract)
                      (big_map %operators (pair (address %owner) (address %operator)) unit))
                (pair (bool %paused)
                      (big_map %tokens
                         nat
                         (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH int 511 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           { CDR ; CDR ; CDR } ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           { CAR ; CDR ; CDR } ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           PAIR ;
                           MEM ;
                           IF { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CAR ; CDR ; CDR } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                { IF_NONE { PUSH int 518 ; FAILWITH } {} } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 2 ;
                                CAR ;
                                PAIR %owner %token_id ;
                                PAIR %request %balance }
                              { DUP ;
                                CDR ;
                                PUSH nat 0 ;
                                SWAP ;
                                DIG 2 ;
                                CAR ;
                                PAIR %owner %token_id ;
                                PAIR %request %balance } } ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 441 ; FAILWITH } ;
                     DUP ;
                     { CAR ; CDR } ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 446 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CAR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     COMPARE ;
                     LT ;
                     IF { PUSH int 449 ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     DIG 4 ;
                     { CAR ; CDR ; CAR } ;
                     DUP ;
                     PUSH nat 1 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     { CDR ; CDR } ;
                     ADD ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CAR } ;
                     PAIR ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CDR ; CDR } ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH int 453 ; FAILWITH } { DROP } } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CDR } ;
                          DIG 7 ;
                          { CAR ; CDR ; CDR } ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          { CDR ; CDR } ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          GET ;
                          { IF_NONE { PUSH int 453 ; FAILWITH } {} } ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CDR ; CDR } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CAR } ;
                          PAIR ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          { CAR ; CDR } ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     MEM ;
                     IF { DROP }
                        { SWAP ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          { CDR ; CDR } ;
                          PUSH (pair (string %name) (pair (nat %decimals) (map %extras string string)))
                               (Pair "" (Pair 0 {})) ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          { CDR ; CAR } ;
                          PAIR %symbol ;
                          DIG 6 ;
                          { CDR ; CDR } ;
                          PAIR %token_id ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR } ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 376 ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CONTRACT unit ;
                     NIL operation ;
                     SWAP ;
                     { IF_NONE { PUSH int 379 ; FAILWITH } {} } ;
                     DIG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 436 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CDR } ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 431 ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH int 545 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MAP { DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           { CDR ; CDR ; CDR } ;
                           SWAP ;
                           GET ;
                           { IF_NONE { PUSH int 555 ; FAILWITH } {} } } ;
                     EXEC ;
                     DROP 2 } ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CAR } ;
                     IF { PUSH int 539 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     SELF ;
                     ADDRESS ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CAR } ;
                         IF { PUSH int 469 ; FAILWITH } {} ;
                         DUP ;
                         ITER { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CAR ; CAR } ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF { PUSH bool True }
                                   { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     { CDR ; CAR ; CDR } ;
                                     SENDER ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     PAIR %owner %operator ;
                                     MEM } ;
                                IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                DUP ;
                                CDR ;
                                ITER { DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       { CDR ; CDR ; CDR } ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       { CDR ; CAR } ;
                                       MEM ;
                                       IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                       DUP ;
                                       { CDR ; CDR } ;
                                       PUSH nat 0 ;
                                       COMPARE ;
                                       LT ;
                                       IF { DUP ;
                                            { CDR ; CDR } ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            { CAR ; CDR ; CDR } ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            { CDR ; CAR } ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            PAIR ;
                                            GET ;
                                            { IF_NONE { PUSH int 496 ; FAILWITH } {} } ;
                                            COMPARE ;
                                            GE ;
                                            IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            { CDR ; CAR } ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            CAR ;
                                            PAIR ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            { IF_NONE { PUSH int 500 ; FAILWITH } { DROP } } ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            { CDR ; CDR } ;
                                            DIG 9 ;
                                            { CAR ; CDR ; CDR } ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            { CDR ; CAR } ;
                                            DIG 9 ;
                                            DUP ;
                                            DUG 10 ;
                                            CAR ;
                                            PAIR ;
                                            GET ;
                                            { IF_NONE { PUSH int 500 ; FAILWITH } {} } ;
                                            SUB ;
                                            ISNAT ;
                                            { IF_NONE { PUSH int 500 ; FAILWITH } {} } ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            SWAP ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUP ;
                                            DUG 4 ;
                                            { CAR ; CDR ; CDR } ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            { CDR ; CAR } ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            PAIR ;
                                            MEM ;
                                            IF { DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DUP ;
                                                 CDR ;
                                                 SWAP ;
                                                 CAR ;
                                                 DUP ;
                                                 CAR ;
                                                 SWAP ;
                                                 CDR ;
                                                 DUP ;
                                                 CAR ;
                                                 SWAP ;
                                                 CDR ;
                                                 DUP ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 { CDR ; CAR } ;
                                                 DIG 6 ;
                                                 DUP ;
                                                 DUG 7 ;
                                                 CAR ;
                                                 PAIR ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 GET ;
                                                 { IF_NONE { PUSH int 502 ; FAILWITH } { DROP } } ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 { CDR ; CDR } ;
                                                 DIG 9 ;
                                                 { CAR ; CDR ; CDR } ;
                                                 DIG 7 ;
                                                 DUP ;
                                                 DUG 8 ;
                                                 { CDR ; CAR } ;
                                                 DIG 8 ;
                                                 CAR ;
                                                 PAIR ;
                                                 GET ;
                                                 { IF_NONE { PUSH int 502 ; FAILWITH } {} } ;
                                                 ADD ;
                                                 SOME ;
                                                 SWAP ;
                                                 UPDATE ;
                                                 SWAP ;
                                                 PAIR ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUG 2 }
                                               { DIG 3 ;
                                                 DUP ;
                                                 CDR ;
                                                 SWAP ;
                                                 CAR ;
                                                 DUP ;
                                                 CAR ;
                                                 SWAP ;
                                                 CDR ;
                                                 DUP ;
                                                 CAR ;
                                                 SWAP ;
                                                 CDR ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 { CDR ; CAR } ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 CAR ;
                                                 PAIR ;
                                                 DIG 5 ;
                                                 { CDR ; CDR } ;
                                                 SOME ;
                                                 SWAP ;
                                                 UPDATE ;
                                                 SWAP ;
                                                 PAIR ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUG 2 } }
                                          { DROP } } ;
                                DROP } ;
                         DROP }
                       { DUP ;
                         ITER { DUP ;
                                IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 3 ; DUP ; DUG 4 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF { SWAP ; DROP } { PUSH int 569 ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    CDR ;
                                    DIG 5 ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    PUSH (option unit) (Some Unit) ;
                                    SWAP ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 3 ; DUP ; DUG 4 ; { CAR ; CAR } ; SENDER ; COMPARE ; EQ } ;
                                    IF { SWAP ; DROP } { PUSH int 575 ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    CDR ;
                                    DIG 6 ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP } } ;
                         DROP } ;
                     NIL operation } } } ;
         PAIR } }
