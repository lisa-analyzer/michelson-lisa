digraph {
	"node0" [shape="rect",color="black",label=<v0 = PAIR(PARAMETER_VALUE, STORAGE_VALUE)>];
	"node1" [shape="rect",color="gray",label=<DROP()>];
	"node2" [shape="rect",color="gray",label=<v9 = ConsumeLEFT_RIGHT_ProduceOr(v3)>];
	"node3" [shape="rect",color="gray",label=<v10 = PUSH(&quot;NAT_TYPE&quot;, 257)>];
	"node4" [shape="rect",color="gray",label=<v17 = PUSH(&quot;STRING_TYPE&quot;, &quot;&quot;VoidResult&quot;&quot;)>];
	"node5" [shape="rect",color="gray",label=<v14 = NIL(&quot;OPERATION_TYPE&quot;)>];
	"node6" [shape="rect",color="gray",label=<v4 = ConsumeLEFT_RIGHT_ProduceOr(v3)>];
	"node7" [shape="rect",color="gray",label=<v8 = PUSH(&quot;STRING_TYPE&quot;, &quot;&quot;oops&quot;&quot;)>];
	"node8" [shape="rect",color="gray",label=<v6 = NIL(&quot;OPERATION_TYPE&quot;)>];
	"node9" [shape="rect",color="gray",label=<v13 = UNIT()>];
	"node10" [shape="rect",color="gray",label=<v2 = CAR(v1)>];
	"node11" [shape="rect",color="gray",label=<v7 = PAIR(v5, v6)>];
	"node12" [shape="rect",color="black",peripheries="2",label=<FAILWITH()>];
	"node13" [shape="rect",color="gray",label=<DROP()>];
	"node14" [shape="rect",color="gray",label=<DROP()>];
	"node15" [shape="rect",color="gray",label=<v11 = PUSH(&quot;NAT_TYPE&quot;, 1)>];
	"node16" [shape="rect",color="black",peripheries="2",label=<ret>];
	"node17" [shape="rect",color="black",peripheries="2",label=<FAILWITH()>];
	"node18" [shape="rect",color="gray",label=<v19 = Phi(v7, v15)>];
	"node19" [shape="rect",color="gray",label=<v3 = ConsumeLEFT_RIGHT_ProduceOr(v2)>];
	"node20" [shape="rect",color="gray",label=<DROP()>];
	"node21" [shape="rect",color="gray",label=<v16 = PUSH(&quot;NAT_TYPE&quot;, 123)>];
	"node22" [shape="rect",color="gray",label=<v5 = UNIT()>];
	"node23" [shape="rect",color="gray",label=<v15 = PAIR(v13, v14)>];
	"node24" [shape="rect",color="gray",label=<v1 = CAST(v0)>];
	"node25" [shape="rect",color="gray",label=<v18 = PAIR(v16, v17)>];
	"node26" [shape="rect",color="gray",label=<DROP()>];
	"node27" [shape="rect",color="gray",label=<v12 = LSL(v10, v11)>];
	"node1" -> "node3" [color="black"];
	"node2" -> "node1" [color="blue",style="dashed"];
	"node2" -> "node13" [color="red",style="dashed"];
	"node3" -> "node15" [color="black"];
	"node4" -> "node25" [color="black"];
	"node5" -> "node23" [color="black"];
	"node6" -> "node26" [color="red",style="dashed"];
	"node6" -> "node20" [color="blue",style="dashed"];
	"node7" -> "node17" [color="black"];
	"node8" -> "node11" [color="black"];
	"node9" -> "node5" [color="black"];
	"node10" -> "node19" [color="black"];
	"node11" -> "node18" [color="black"];
	"node13" -> "node21" [color="black"];
	"node14" -> "node9" [color="black"];
	"node15" -> "node27" [color="black"];
	"node18" -> "node16" [color="black"];
	"node19" -> "node2" [color="red",style="dashed"];
	"node19" -> "node6" [color="blue",style="dashed"];
	"node20" -> "node22" [color="black"];
	"node21" -> "node4" [color="black"];
	"node22" -> "node8" [color="black"];
	"node23" -> "node18" [color="black"];
	"node24" -> "node10" [color="black"];
	"node25" -> "node12" [color="black"];
	"node0" -> "node24" [color="black"];
	"node26" -> "node7" [color="black"];
	"node27" -> "node14" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
